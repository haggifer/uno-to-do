{"version":3,"file":"static/js/358.976c420f.chunk.js","mappings":"8MA+CA,UArCoB,WAClB,IAAAA,GAAiBC,EAAAA,EAAAA,MAAVC,GAA2BC,EAAAA,EAAAA,GAAAH,EAAA,GAArB,GAEPI,GAAYC,EAAAA,EAAAA,GAAeC,EAAAA,GAAaC,KAExCC,GAAmBC,EAAAA,EAAAA,UAAQ,WAC/B,OAAOL,EAAUM,QACf,SAAAC,GAAI,OAAKT,EAAOU,IAAI,UAClBD,EAAKE,MAAMC,cAAcC,SAAUb,EAAOU,IAAI,SAAoBE,cAAc,GAEtF,GAAG,CAACV,EAAWF,IAEfc,GACEC,EAAAA,EAAAA,UAA+CC,EAAAA,GAAAA,IAAgBC,GAAAhB,EAAAA,EAAAA,GAAAa,EAAA,GAD1DI,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAGlCG,GACEL,EAAAA,EAAAA,UAA8CM,EAAAA,GAAAA,IAAeC,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GADxDG,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAGhC,OACGpB,GAECuB,EAAAA,EAAAA,KAACC,EAAAA,GAAS,CACRC,OAAQ,CACNhB,MAAO,SACPO,YAAaA,EACbC,eAAgBA,EAChBI,WAAYA,EACZC,cAAeA,EACfI,UAAU,GAEZC,aAAcvB,EACdwB,WAAYZ,EAAYa,MACxBC,UAAWT,EAAWQ,SAZxBN,EAAAA,EAAAA,KAACQ,EAAAA,EAAc,GAerB,C","sources":["components/pages/private/tasks/SearchTasks.tsx"],"sourcesContent":["import {TasksPage} from \"./TasksPage\";\r\nimport {selectTasks} from \"../../../../redux/selectors/tasks\";\r\nimport {useAppSelector} from \"../../../../redux/hooks\";\r\nimport React, {useMemo, useState} from \"react\";\r\nimport {CenteredLoader} from \"../../../common/CenteredLoader\";\r\nimport {sortOptions, splitOptions, TasksSortOptionValue, TasksSplitOptionValue} from \"./TasksPageFilters\";\r\nimport {ISelectOption} from \"../../../../typescript/common\";\r\nimport {ITask} from \"../../../../typescript/entities\";\r\nimport {useSearchParams} from \"react-router-dom\";\r\n\r\nconst SearchTasks = () => {\r\n  const [params] = useSearchParams()\r\n\r\n  const tasksData = useAppSelector(selectTasks).data as ITask[]\r\n\r\n  const filteredTaskData = useMemo(() => {\r\n    return tasksData.filter(\r\n      task => !params.get('title') ||\r\n        task.title.toLowerCase().includes((params.get('title') as string).toLowerCase())\r\n    )\r\n  }, [tasksData, params])\r\n\r\n  const [splitOption, setSplitOption] =\r\n    useState<ISelectOption<TasksSplitOptionValue>>(splitOptions[0])\r\n\r\n  const [sortOption, setSortOption] =\r\n    useState<ISelectOption<TasksSortOptionValue>>(sortOptions[0])\r\n\r\n  return (\r\n    !tasksData ?\r\n      <CenteredLoader/> :\r\n      <TasksPage\r\n        header={{\r\n          title: 'Search',\r\n          splitOption: splitOption,\r\n          setSplitOption: setSplitOption,\r\n          sortOption: sortOption,\r\n          setSortOption: setSortOption,\r\n          controls: false,\r\n        }}\r\n        visibleTasks={filteredTaskData}\r\n        splitValue={splitOption.value}\r\n        sortValue={sortOption.value}\r\n      />\r\n  )\r\n}\r\n\r\nexport default SearchTasks"],"names":["_useSearchParams","useSearchParams","params","_slicedToArray","tasksData","useAppSelector","selectTasks","data","filteredTaskData","useMemo","filter","task","get","title","toLowerCase","includes","_useState","useState","splitOptions","_useState2","splitOption","setSplitOption","_useState3","sortOptions","_useState4","sortOption","setSortOption","_jsx","TasksPage","header","controls","visibleTasks","splitValue","value","sortValue","CenteredLoader"],"sourceRoot":""}