{"version":3,"file":"static/js/825.58e8da37.chunk.js","mappings":"+LAcMA,EAAyD,CAC7D,iBACA,UACA,oBACA,QACA,eACA,sBACA,qBACA,QACA,mBACA,OACA,WACA,aACA,iBACA,mBACA,aACA,kBACA,mBACA,SACA,cACA,cACA,kBAGWC,EAAe,SAA6BC,GACvD,IAAMC,GAAQC,EAAAA,EAAAA,KAERC,GAA4CC,EAAAA,EAAAA,UAAQ,WACxD,MAAO,CACLC,QAAS,CACPC,WAAYL,EAAMM,QAAQC,OAAOC,WACjC,MAAO,CACLC,MAAOT,EAAMM,QAAQI,KAAKC,UAG9BC,YAAa,CACX,SAAU,CACRH,MAAOT,EAAMM,QAAQI,KAAKC,UAG9BE,WAAY,CACV,SAAU,CACRJ,MAAOT,EAAMM,QAAQI,KAAKC,UAG9BG,KAAM,CACJC,OAAQ,EACRC,UAAW,EACXX,WAAYL,EAAMM,QAAQC,OAAOC,YAEnCS,OAAQ,CACNZ,WAAYL,EAAMM,QAAQC,OAAOC,WACjC,UAAW,CACTH,WAAYL,EAAMM,QAAQC,OAAOW,iBAEnC,sCAAuC,CACrCb,WAAYL,EAAMM,QAAQC,OAAOY,qBAIzC,GAAG,CAACnB,IAEJ,OACEoB,EAAAA,EAAAA,KAACC,EAAAA,IAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDvB,GAAK,IACTwB,gBAAiBxB,EAAMwB,iBAAmB,eAC1CC,OACEC,OAAOC,YACL7B,EAAiB8B,KAAI,SAAAC,GAAI,MAAI,CAC3BA,EACA,SAACC,GAA8B,OAAAP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC1BO,GACE3B,EAAc0B,IAAU,CAAC,GACzB7B,EAAMyB,QAAUzB,EAAMyB,OAAOI,IAAU,CAAC,EAAC,EAEjD,OAKX,C,qfChFaE,EAAa,SAAHC,GAAiC,IAA5BC,EAAOD,EAAPC,QAASC,EAAIF,EAAJE,KAC7BC,GAAWC,EAAAA,EAAAA,KAEXnC,GAAQC,EAAAA,EAAAA,KAERmC,GAAOC,EAAAA,EAAAA,GAAcrC,EAAMsC,YAAYC,GAAG,OAE1CC,GAAQC,EAAAA,EAAAA,GAAeC,EAAAA,GAEvBC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACTlB,GAASmB,EAAAA,EAAAA,IAAWpB,EAAMqB,KAAI,OAEpCtB,IAAS,wBAAAkB,EAAAK,OAAA,GAAAP,EAAA,KACV,kBAJa,OAAAJ,EAAAY,MAAA,KAAAC,UAAA,KAMd,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,SAAA5D,GAAK,MAAK,CACZ6D,MAAOzB,EAAO,aAAU0B,EACxBC,SAAU,OACV,QAAS,CACPF,MAAO,QAEV,EAAEG,SAAA,EAEH5C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACC,QAAQ,KAAKN,GAAI,CAC3BO,SAAU,OACVC,WAAY,OACZC,aAAc,QACdL,SAAC,mBAEH5C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACL,GAAI,SAAA5D,GAAK,MAAK,CACxBmE,SAAU,OACVC,WAAY,OACZ3D,MAAOT,EAAMM,QAAQC,OAAO+D,KAAK,GAClC,EAAEN,SAAC,sCAEJN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACPW,QAAS,OACTC,eAAgB,WAChBC,GAAI,EACJ,yBAA0B,CACxBC,GAAI,IAENV,SAAA,EACA5C,EAAAA,EAAAA,KAACuD,EAAAA,EAAM,CACLC,QAAS5C,EACTkC,QAAQ,OAAMF,SACf,YAEDN,EAAAA,EAAAA,MAACiB,EAAAA,EAAM,CACLC,QAASjC,EACTuB,QAAQ,YACRzD,MAAM,QACNoE,SAAUrC,EAAMsC,QAAQC,SAASC,EAAAA,IAAahB,SAAA,CAC/C,SAGGxB,EAAMsC,QAAQC,SAASC,EAAAA,MACrB5D,EAAAA,EAAAA,KAAC6D,EAAAA,EAAY,YAM3B,E,8BCtCaC,EAAgC,IAEhCC,EAAe,SAAHpD,GAAyD,IAApDqD,EAAUrD,EAAVqD,WAAYC,EAAatD,EAAbsD,cAAeC,EAAUvD,EAAVuD,WACjDC,GAAaC,EAAAA,EAAAA,QAAO,MAEpBxF,GAAQC,EAAAA,EAAAA,KAERmC,GAAOC,EAAAA,EAAAA,GAAcrC,EAAMsC,YAAYC,GAAG,OAC1CkD,GAAOpD,EAAAA,EAAAA,GAAcrC,EAAMsC,YAAYC,GAAG,OAEhDmD,GAAwCC,EAAAA,EAAAA,UAdP,KAc4CC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtEI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAE9BI,GAAkB7F,EAAAA,EAAAA,UAAgB,WACtC,OAAOsF,EAAI,GAAAQ,OACNH,EAAY,MACf,OACJ,GAAG,CAACA,EAAcL,IAElBS,GAAkDP,EAAAA,EAAAA,WAAkB,GAAKQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAAlEE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAE9CG,GAA8CX,EAAAA,EAAAA,UAAiB,IAAGY,GAAAV,EAAAA,EAAAA,GAAAS,EAAA,GAA3DE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAE1CG,GAA4Cf,EAAAA,EAAAA,UAAiB,IAAGgB,GAAAd,EAAAA,EAAAA,GAAAa,EAAA,GAAzDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAExCG,GAAoDnB,EAAAA,EAAAA,WAAkB,GAAMoB,IAAAlB,EAAAA,EAAAA,GAAAiB,EAAA,GAArEE,GAAkBD,GAAA,GAAEE,GAAqBF,GAAA,GAEhDG,IAA0DvB,EAAAA,EAAAA,WAAkB,GAAMwB,IAAAtB,EAAAA,EAAAA,GAAAqB,GAAA,GAA3EE,GAAqBD,GAAA,GAAEE,GAAwBF,GAAA,GAEtDG,IAA8C3B,EAAAA,EAAAA,UAAwB,MAAK4B,IAAA1B,EAAAA,EAAAA,GAAAyB,GAAA,GAApEE,GAAeD,GAAA,GAAEE,GAAkBF,GAAA,GAE1CG,IAAoC/B,EAAAA,EAAAA,WAAkB,GAAMgC,IAAA9B,EAAAA,EAAAA,GAAA6B,GAAA,GAArDrE,GAAUsE,GAAA,GAAEC,GAAaD,GAAA,IAEhCE,EAAAA,EAAAA,YAAU,WACR9B,EArC+B,IAsCjC,GAAG,CAACN,KAEJoC,EAAAA,EAAAA,YAAU,WACRpB,GAA6B,OAAVrB,QAAU,IAAVA,OAAU,EAAVA,EAAY0C,QAAS,IACxCjB,GAA4B,OAAVzB,QAAU,IAAVA,OAAU,EAAVA,EAAY2C,OAAQ,IAEtC,IAAMC,EAAwBR,KAAmBS,EAAAA,EAAAA,IAAoBT,IAEjEpC,GAAcA,EAAW8C,WAAaF,GACxCP,GAA6B,OAAVrC,QAAU,IAAVA,GAAAA,EAAY8C,SAAWC,IAAO/C,EAAW8C,UAAY,KAE5E,GAAG,CAAC9C,KAEJyC,EAAAA,EAAAA,YAAU,WACHb,IACHK,IAAyB,EAE7B,GAAG,CAACL,MAEJa,EAAAA,EAAAA,YAAU,WACR,IAAMG,EAAwBR,IAAmBA,GAAgBY,cAE7DhD,IAAwB,OAAVA,QAAU,IAAVA,OAAU,EAAVA,EAAY8C,YAAaF,GACzC1C,EAAW,CACThC,GAAI8B,EAAW9B,GACf4E,SAAUV,KAAmBS,EAAAA,EAAAA,IAAoBT,KAGvD,GAAG,CAACA,KAEJ,IAAMa,IAAcC,EAAAA,EAAAA,cAAY,WAC1B9B,GACFlB,EAAW,CACThC,GAAI8B,EAAY9B,GAChBwE,MAAOtB,GAGb,GAAG,CAACpB,EAAYoB,EAAiBlB,IAE3BiD,IAAaD,EAAAA,EAAAA,cAAY,WACzB1B,GACFtB,EAAW,CACThC,GAAI8B,EAAY9B,GAChByE,KAAMnB,GAGZ,GAAG,CAACxB,EAAYwB,EAAgBtB,IAE1BkD,IAAyDF,EAAAA,EAAAA,cAAY,SAACG,GAC1EnD,EAAW,CACThC,GAAI8B,EAAY9B,GAChBoF,WAAYtD,EAAYsD,YAG1BD,EAAEE,iBACJ,GAAG,CAACvD,EAAYE,IAEVsD,IAAsDN,EAAAA,EAAAA,cAAY,SAACG,GACvEnD,EAAW,CACThC,GAAI8B,EAAY9B,GAChBuF,WAAYzD,EAAYyD,YAG1BJ,EAAEE,iBACJ,GAAG,CAACvD,EAAYE,IAEVwD,IAAqDR,EAAAA,EAAAA,cAAY,SAACG,GACtExB,IAAsB,GAElB7B,EAAY8C,UACd5C,EAAW,CACThC,GAAI8B,EAAY9B,GAChB4E,SAAU,OAIdO,EAAEE,iBACJ,GAAG,CAACvD,EAAYE,IAEVyD,IAAuBT,EAAAA,EAAAA,cAAY,SAACU,GACxC,IAAMC,GAAahB,EAAAA,EAAAA,IACjBE,KAAOe,EAAAA,EAAAA,IAAwBF,KAGjC1D,EAAW,CACThC,GAAI8B,EAAY9B,GAChB4E,SAAUe,GAEd,GAAG,CAAC7D,EAAYE,IAEV6D,GAAW,SACfC,EAA2CxG,GACtCA,EAAJyG,KACG,IADGC,EAAI1G,EAAJ0G,KAAY1G,EAAN2G,OAEbxD,EAAgBuD,EAAKzF,MACvB,EAEM2F,GAA6B,SAACC,EAAyBzJ,GAC3D,OAAQyJ,GACN,IAAK,WAIL,IAAK,UACH,MAAO,CACLC,MAAO,GAEX,IAAK,UAIL,IAAK,SACH,MAAO,CACLA,MAAM,IAADzD,OAAMD,IAEf,QACE,MAAO,CAAC,EAEd,EAEM2D,IAAUxJ,EAAAA,EAAAA,UAAQ,kBACtBiB,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAACC,GAAI,SAAA5D,GAAK,MAAK,CACjBuE,QAAS,OACTqF,cAAe,SACfpF,eAAgB,gBAChBX,MAAO,OACPgG,UAAW,QACXC,GAAI1H,EAAO,EAAI,EACf2H,GAAI3H,EAAO,EAAI,EACf4H,GAAI5H,EAAO,EAAI,EACf/B,WAAYL,EAAMM,QAAQC,OAAO0J,QAClC,EAAEjG,WAEGoB,IACA1B,EAAAA,EAAAA,MAAAwG,EAAAA,SAAA,CAAAlG,SAAA,EACIN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAK,SAAA,EACAN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACPW,QAAS,OACT4F,WAAY,aACZL,GAAI,OACJ9F,SAAA,EACE5C,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAACC,GAAI,CACPW,QAAS,OACT4F,WAAY,SACZC,OAAQ,QACRpG,UACE5C,EAAAA,EAAAA,KAACiJ,EAAAA,EAAQ,CACLC,QAASlF,EAAWsD,UACpB9D,QAAS4D,GACT5E,GAAI,SAAA5D,GAAK,MAAK,CACZuK,EAAG,EACH9J,MAAOT,EAAMM,QAAQC,OAAO+D,KAAK,GAClC,OAITlD,EAAAA,EAAAA,KAACoJ,EAAAA,EAAS,CACNxB,MAAOxC,EACPiE,SAAU,SAAAhC,GAAC,OAAIhC,EAAmBgC,EAAEiC,cAAc1B,MAAM,EACxD2B,OAAQtC,GACRuC,YAAY,4BACZC,WAAW,EACXjH,GAAI,SAAA5D,GAAK,MAAK,CACZ8K,GAAI,EACJ,SAAU,CACR,aAAc,CACZC,OAAQ,eACRC,QAAS,eACTC,QAAS,eACT9G,SAAU,kBACVC,WAAY,kBACZ,iBAAkB,CAChB8G,QAAS,eACTzK,MAAM,GAADwF,OAAKjG,EAAMM,QAAQC,OAAO+D,KAAK,GAAI,kBAI/C,KAGLlD,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAACC,GAAI,CACPW,QAAS,OACT4F,WAAY,SACZC,OAAQ,OACRe,GAAI,QACJnH,UACE5C,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CACAiB,QAASgE,GACThF,GAAI,CACFuH,GAAI,OACJC,OAAQ,WACRpH,SAGFoB,EAAWyD,WACTzH,EAAAA,EAAAA,KAACiK,EAAAA,EAAQ,CAACzH,GAAI,SAAA5D,GAAK,MAAK,CACtBuE,QAAS,QACT+G,KAAMtL,EAAMM,QAAQC,OAAOgL,IAC5B,KACDnK,EAAAA,EAAAA,KAACiK,EAAAA,EAAQ,CAACzH,GAAI,SAAA5D,GAAK,MAAK,CACtBuE,QAAS,QACT+G,KAAMtL,EAAMM,QAAQC,OAAO+D,KAAK,GACjC,YAMflD,EAAAA,EAAAA,KAACoK,EAAAA,EAAO,CAAC5H,GAAI,CACX6H,GAAI,MAGN/H,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAK,SAAA,EACAN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACAiB,QAAS,WACPqC,IAAuBD,GACzB,EACApD,GAAI,SAAA5D,GAAK,MAAK,CACZuE,QAAS,OACT4F,WAAY,SACZiB,OAAQ,UACT,EAAEpH,SAAA,EAEH5C,EAAAA,EAAAA,KAACsK,EAAAA,EAAS,CAAC9H,GAAI,SAAA5D,GAAK,MAAK,CACvBS,MAAO2E,EAAY8C,SAAWlI,EAAMM,QAAQK,QAAQgL,KAAO3L,EAAMM,QAAQC,OAAO+D,KAAK,GACtF,KAEDlD,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACC,QAAQ,YAAYN,GAAI,SAAA5D,GAAK,MAAK,CAC5C8K,GAAI,EACJ3G,SAAU,OACVC,WAAY,OACZwH,WAAY,IACZnL,MAAO2E,EAAY8C,SAAWlI,EAAMM,QAAQK,QAAQgL,KAAO3L,EAAMM,QAAQC,OAAO+D,KAAK,GACtF,EAAEN,SAECoB,EAAY8C,SAAQ,OAAAjC,QACX4F,EAAAA,EAAAA,IAAiB,IAAIC,KAAK1G,EAAW8C,YAC5C,oBAKH9C,EAAY8C,UAAYlB,MACzB5F,EAAAA,EAAAA,KAAC2K,EAAAA,EAAS,CACNnH,QAASkE,GACTlF,GAAI,SAAA5D,GAAK,MAAK,CACZmL,GAAI,OACJ1K,MAAOT,EAAMM,QAAQC,OAAO+D,KAAK,GAClC,OAMX0C,KACEtD,EAAAA,EAAAA,MAAAwG,EAAAA,SAAA,CAAAlG,SAAA,EACIN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACPa,GAAI,EACJ,QAAS,CACPF,QAAS,OACT4F,WAAY,SACZ6B,GAAI,EACJZ,OAAQ,YAEVpH,SAAA,EACEN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACAiB,QAAS,kBAAMmE,GAAqB,QAAQ,EAC5CnF,GAAI,SAAA5D,GAAK,MAAK,CAAC,CAAC,EAAEgE,SAAA,EAElB5C,EAAAA,EAAAA,KAACsK,EAAAA,EAAS,KAEVtK,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACL,GAAI,CACduH,GAAI,EACJhH,SAAU,OACVC,WAAY,OACZwH,WAAY,KACZ5H,SAAC,cAEPN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACAiB,QAAS,kBAAMmE,GAAqB,WAAW,EAC/CnF,GAAI,SAAA5D,GAAK,MAAK,CAAC,CAAC,EAAEgE,SAAA,EAElB5C,EAAAA,EAAAA,KAACsK,EAAAA,EAAS,KAEVtK,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACL,GAAI,CACduH,GAAI,EACJhH,SAAU,OACVC,WAAY,OACZwH,WAAY,KACZ5H,SAAC,iBAEPN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACAiB,QAAS,kBAAMmE,GAAqB,cAAc,EAClDnF,GAAI,SAAA5D,GAAK,MAAK,CAAC,CAAC,EAAEgE,SAAA,EAElB5C,EAAAA,EAAAA,KAACsK,EAAAA,EAAS,KAEVtK,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACL,GAAI,CACduH,GAAI,EACJhH,SAAU,OACVC,WAAY,OACZwH,WAAY,KACZ5H,SAAC,qBAEPN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACAiB,QAAS,WACPyC,IAA0BD,GAC5B,EACAxD,GAAI,SAAA5D,GAAK,MAAK,CAAC,CAAC,EAAEgE,SAAA,EAElB5C,EAAAA,EAAAA,KAACsK,EAAAA,EAAS,KAEVtK,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACL,GAAI,CACduH,GAAI,EACJhH,SAAU,OACVC,WAAY,OACZwH,WAAY,KACZ5H,SAAC,gBAGHoD,IACEhG,EAAAA,EAAAA,KAAC6K,EAAAA,EAAc,CAACrI,GAAI,CAClBuH,GAAI,WAEN/J,EAAAA,EAAAA,KAAC8K,EAAAA,EAAc,CAACtI,GAAI,CAClBuH,GAAI,gBAOhB/D,KACEhG,EAAAA,EAAAA,KAAC+K,EAAAA,EAAgB,CACbnD,MAAOxB,GACPiD,SAAUhD,GACV2E,aAAW,EACXxI,GAAI,CACFuH,IAAK,EACL,2BAA4B,CAC1B5G,QAAS,kBAS7BnD,EAAAA,EAAAA,KAACoK,EAAAA,EAAO,CAAC5H,GAAI,CACX6H,GAAI,MAGN/H,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAK,SAAA,CAEA4C,IACExF,EAAAA,EAAAA,KAACiL,EAAAA,EAAU,CAACzI,GAAI,SAAA5D,GAAK,MAAK,CACxBmE,SAAU,OACVC,WAAY,OACZwH,WAAY,IACZnL,MAAOT,EAAMM,QAAQI,KAAKC,QAC3B,EAAEqD,SAAC,UAEN5C,EAAAA,EAAAA,KAACoJ,EAAAA,EAAS,CACNxB,MAAOpC,EACP6D,SAAU,SAAAhC,GAAC,OAAI5B,EAAkB4B,EAAEiC,cAAc1B,MAAM,EACvD2B,OAAQpC,GACRqC,YAAY,WACZC,WAAW,EACXjH,GAAI,SAAA5D,GAAK,MAAK,CACZ6D,MAAO,OACPyI,UAAW,QACXC,SAAU,OACV,SAAU,CACR,aAAc,CACZxB,OAAQ,eACRC,QAAS,eACTC,QAAS,eACT9G,SAAU,kBACVC,WAAY,kBACZwH,WAAY,iBACZ,iBAAkB,CAChBV,QAAS,eACTzK,MAAM,GAADwF,OAAKjG,EAAMM,QAAQC,OAAO+D,KAAK,GAAI,kBAI/C,QAITlD,EAAAA,EAAAA,KAACoK,EAAAA,EAAO,CAAC5H,GAAI,CACX6H,GAAI,SAIV/H,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,SAAA5D,GAAK,MAAK,CACjBuE,QAAS,OACTC,eAAgB,gBAChB2F,WAAY,SACZ,MAAO,CACL1J,MAAOT,EAAMM,QAAQC,OAAO+D,KAAK,IAEpC,EAAEN,SAAA,EACC5C,EAAAA,EAAAA,KAACoL,EAAAA,EAAU,CACP5H,QAAS,kBAAMS,EAAc,KAAK,EAClCzB,GAAI,CACFuH,IAAK,GACLnH,UAEF5C,EAAAA,EAAAA,KAACqL,EAAAA,EAAmB,OAExBrL,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACC,QAAQ,QAAQN,GAAI,CAC9BkH,GAAI,EACJ3G,SAAU,OACVC,WAAY,OACZwH,WAAY,KACZ5H,SAAA,WAAAiC,QACY4F,EAAAA,EAAAA,IAAiB,IAAIC,KAAK1G,EAAWsH,oBAEnDtL,EAAAA,EAAAA,KAACoL,EAAAA,EAAU,CACP5H,QAAS,kBAAMgD,IAAc,EAAK,EAClChE,GAAI,CACFc,IAAK,GACLV,UAEF5C,EAAAA,EAAAA,KAACuL,EAAAA,EAAiB,aAK9B,GACL,CAACvH,EAAYoC,GAAiBZ,EAAgBJ,EAAiBgC,GAAkBM,GAAqBC,GAAsBH,GAAkBL,GAAYF,GAAahD,EAAe+B,GAAuBJ,GAAoB5E,IAEpO,OACEsB,EAAAA,EAAAA,MAAAwG,EAAAA,SAAA,CAAAlG,SAAA,EACE5C,EAAAA,EAAAA,KAACwL,EAAAA,GAAU,CACTC,QAAStH,EACTuH,KAAM1H,EACN2H,QAAS7H,EACT8H,UAAW,WACT3G,GAAqB,EACvB,EACA4G,OAAQ,WACN5G,GAAqB,EACvB,EAAErC,SAGA,SAAAyF,GAAK,OACHrI,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CACFuJ,IAAK3H,EAAWvB,SAGdyB,GACErE,EAAAA,EAAAA,KAAC+L,EAAAA,UAAS,CACRtJ,MAAOiC,EACPqD,SAAUA,GACViE,KAAK,IACLC,cAAe,CAAC,KAChBC,eAAgB,CAhfL,IAgfuB,GAClCC,eAAgB,CAhfL,IAgfuB,GAClChE,QACEnI,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAACC,GAAI,CACPW,QAAUnC,OAAgB0B,EAAT,OACjB0J,SAAU,WACVC,IAAK,EACLC,KAAM,OACN7J,MAAO,OACPuG,OAAQ,OACRgB,OAAQ,eAEVpH,UAEFN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACP4J,SAAU,WACV3J,MAAOuB,EAAcY,EAAmB,EACxC6D,UAAW,QACX8D,UAAW,SACXC,WAAYxH,EAAiB,GAAAH,OAAMf,EAA6B,WAAOpB,GACvEE,SAAA,EACA5C,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAACC,GAAI,SAAA5D,GAAK,OAAAsB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTkI,GAA2BC,IAAa,IAC3C+D,SAAU,WACVC,IAAK,EACL5J,MAAOmC,EACPjC,SAAU,OACV6J,WAAYxH,EAAiB,GAAAH,OAAMf,EAA6B,WAAOpB,GAAS,EAC/EE,SACA2F,MAEHvI,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAACC,GAAI,CACPC,MAAO,OACP+J,WAAYxH,EAAiB,GAAAH,OAAMf,EAA6B,WAAOpB,WAI7E1C,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAACC,GAAI,CACP4J,SAAU,WACVC,IAAK,EACL/D,MAAO,EACP7F,MAAOuB,EAAcY,EAAmB,EACxC6D,UAAW,QACX8D,UAAW,SACX5M,OAAQ,EACR6M,WAAYxH,EAAiB,GAAAH,OAAMf,EAA6B,WAAOpB,GACvEE,UACA5C,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CACFC,IAAEtC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACGkI,GAA2BC,IAAa,IAC3C+D,SAAU,WACVC,IAAK,EACL/D,MAAStE,EAAa,EAAC,IAAAa,OAAOD,GAC9BnC,MAAOmC,EACP4H,WAAYxH,EAAiB,GAAAH,OAAMf,EAA6B,WAAOpB,IACvEE,SAED2F,QAIL,KAKZvI,EAAAA,EAAAA,KAACyM,EAAAA,EAAW,CACVC,KAAMzK,GACNrB,QAAS,kBAAM4F,IAAc,EAAM,EAAC5D,UAEpC5C,EAAAA,EAAAA,KAACU,EAAU,CACTE,QAAS,kBAAM4F,IAAc,EAAM,EACnC3F,KAAMmD,QAKhB,ECnlBa2I,EAAY,SAAHhM,GAA+D,IAA1DE,EAAIF,EAAJE,KAAMqD,EAAUvD,EAAVuD,WAAYF,EAAUrD,EAAVqD,WAAYC,EAAatD,EAAbsD,cACjDrF,GAAQC,EAAAA,EAAAA,KAERmC,GAAOC,EAAAA,EAAAA,GAAcrC,EAAMsC,YAAYC,GAAG,OAE1CyL,GAAa7N,EAAAA,EAAAA,UAA4B,WAC7C,IAAK8B,EAAKiG,SACR,OAAO,KAGT,IAAM+F,EAAU,IAAInC,KAAK7J,EAAKiG,UAE9B,OAAOgG,EAAAA,EAAAA,IAAcD,EACvB,GAAG,CAAChM,EAAKiG,WAwBT,OACExE,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFiB,QAxBkD,SAAC6D,GACrDpD,EAAcpD,EAChB,EAuBIkM,UAAWC,IAAW,CAACC,OAAQpM,EAAKqB,MAAiB,OAAV8B,QAAU,IAAVA,OAAU,EAAVA,EAAY9B,MACvDM,GAAI,SAAA5D,GAAK,MAAK,CACZuE,QAAS,OACT4F,WAAY,SACZN,UAAW,OACXmC,GAAI,EACJtH,GAAI,EACJ4J,aAAc,OACdC,GAAI,EACJxE,GAAI3H,EAAO,EAAI,EACfoM,gBAAiBxO,EAAMM,QAAQC,OAAO0J,QACtCmB,OAAQ,UACRwC,WAAW,GAAD3H,OAAKf,EAA6B,MAC5C,WAAY,CACV7E,WAAYL,EAAMM,QAAQC,OAAOkO,mBAEpC,EAAEzK,SAAA,EAEH5C,EAAAA,EAAAA,KAACiJ,EAAAA,EAAQ,CACPC,QAASrI,EAAKyG,UACd9D,QAzC6D,SAAC6D,GAClEnD,EAAW,CACThC,GAAIrB,EAAKqB,GACToF,WAAYzG,EAAKyG,YAGnBD,EAAEE,iBACJ,EAmCM/E,GAAI,SAAA5D,GAAK,MAAK,CACZuK,EAAGnI,OAAO0B,EAAY,EACtBrD,MAAOT,EAAMM,QAAQC,OAAO+D,KAAK,KAClC,KAGHZ,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACPuH,GAAI/I,EAAO,EAAI,EACfsC,GAAItC,EAAO,EAAI,GACf4B,SAAA,EACA5C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACC,QAAQ,YAAYN,GAAI,CAClCO,SAAU,OACVC,WAAY,OACZwH,WAAY,KACZ5H,SAAE/B,EAAK6F,SAGNkG,GAAc/L,EAAK8F,QAClBrE,EAAAA,EAAAA,MAACO,EAAAA,EAAU,CAACC,QAAQ,YAAYN,GAAI,SAAA5D,GAAK,MAAK,CAC5CyE,GAAI,EACJN,SAAU,OACVC,WAAY,OACZ3D,MAAOT,EAAMM,QAAQC,OAAO+D,KAAK,GAClC,EAAEN,SAAA,EACC5C,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAC+K,UAAU,OAAO9K,GAAI,SAAA5D,GAAK,MAAK,CAClCS,MAA8B,YAAb,OAAVuN,QAAU,IAAVA,OAAU,EAAVA,EAAYW,QAAsB3O,EAAMM,QAAQC,OAAOgL,IACrC,aAAb,OAAVyC,QAAU,IAAVA,OAAU,EAAVA,EAAYW,QAAuB3O,EAAMM,QAAQsO,QAAQC,MAAQ,GACpE,EAAE7K,WAEGgK,GACFA,EAAWc,UAKbd,KACA/L,EAAK8F,MACP,QAIE9F,EAAK8F,MACP,cAMV3G,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CACFiB,QAlF0D,SAAC6D,GAC/DnD,EAAW,CACThC,GAAIrB,EAAKqB,GACTuF,WAAY5G,EAAK4G,YAGnBJ,EAAEE,iBACJ,EA4EM/E,GAAI,CACFuH,GAAI,OACJC,OAAQ,WACRpH,SAGA/B,EAAK4G,WACHzH,EAAAA,EAAAA,KAACiK,EAAAA,EAAQ,CAACzH,GAAI,SAAA5D,GAAK,MAAK,CACtBuE,QAAS,QACT+G,KAAMtL,EAAMM,QAAQC,OAAOgL,IAC5B,KACDnK,EAAAA,EAAAA,KAAC2N,EAAAA,EAAc,CAACnL,GAAI,SAAA5D,GAAK,MAAK,CAC5BuE,QAAS,QACT+G,KAAMtL,EAAMM,QAAQC,OAAO+D,KAAK,GACjC,QAKb,ECxIa0K,EAAkB,SAAHjN,GAAuC,IAAlCkN,EAAYlN,EAAZkN,aAAcC,EAAKnN,EAALmN,MAC7C,OACE9N,EAAAA,EAAAA,KAAA8I,EAAAA,SAAA,CAAAlG,SAEIkL,EAAMvN,KAAI,SAACC,EAAMuN,GAAC,OAChB/N,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CACFC,GAAI,CACFW,QAAS0K,IAAiBE,EAAI,YAASrL,GACvCE,SAGDpC,EAAKoC,UAFDmL,EAGD,KAKhB,E,0HCKaC,GAAU,SAAHrN,GAAwC,IAAnCC,EAAOD,EAAPC,QAASqN,EAAWtN,EAAXsN,YAC1BnN,GAAWC,EAAAA,EAAAA,KAEXnC,GAAQC,EAAAA,EAAAA,KAERmC,GAAOC,EAAAA,EAAAA,GAAcrC,EAAMsC,YAAYC,GAAG,OAE1CC,GAAQC,EAAAA,EAAAA,GAAeC,EAAAA,GAEvB4M,GAAkBnP,EAAAA,EAAAA,UAAQ,kBAAAoP,EAAAA,EAAAA,GAC1B/M,EAAMgN,MAAsB7N,KAAI,SAAA8N,GAAI,MAAK,CAC3CX,MAAOW,EAAKC,KACZ1G,MAAOyG,EAAKnM,GACb,IAAE,GACF,CAACd,EAAMgN,QAEV9J,GAAqBC,EAAAA,EAAAA,UAAsB,CACzCmC,MAAO,GACPe,WAAW,EACXX,SAAU,KACVH,KAAM,GACN0H,KAAMJ,EACJC,EAAgBK,MAAK,SAAA1O,GAAM,OAAIA,EAAO+H,QAAUqG,EAAY/L,EAAE,IAC9D,OAPGsM,GAQL/J,EAAAA,EAAAA,GAAAH,EAAA,GARe,GAUXmK,EAAmBC,EAAAA,GAAW,CAClChI,MAAOgI,EAAAA,KACJC,OACAC,WACHjI,KAAM+H,EAAAA,KACHC,SAGCE,EAAa,eAAArN,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAkN,EAAAC,EAAA,OAAArN,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAUnB,OATK+M,EAAU,CACd7M,IAAI8M,EAAAA,GAAAA,GAAgB5N,EAAM6N,KAAiB1O,KAAI,SAAAM,GAAI,OAAIA,EAAKqB,EAAE,KAC9DwE,MAAOwI,EAAOxI,MACd4E,eAAgB,IAAIZ,MAAQ1D,cAC5BF,SAAUoI,EAAOpI,WAAYD,EAAAA,EAAAA,IAAoBqI,EAAOpI,UACxDH,KAAMuI,EAAOvI,MAAQ,KACrBwI,SAAoB,QAAXL,EAAAI,EAAOb,YAAI,IAAAS,OAAA,EAAXA,EAAalH,QAAS,KAC/BH,UAAWyH,EAAOzH,UAClBH,WAAW,GACZxF,EAAAE,KAAA,EAEKlB,GAASsO,EAAAA,EAAAA,IAAWL,IAAS,OAEnCnO,IAAS,wBAAAkB,EAAAK,OAAA,GAAAP,EAAA,KACV,kBAfkB,OAAAJ,EAAAY,MAAA,KAAAC,UAAA,KAiBnBgN,GAQEC,EAAAA,EAAAA,IAAU,CACRb,iBAAkBA,EAClBc,SAAUV,EACVW,cAAehB,EACfiB,oBAAoB,IAXtBP,EAAMG,EAANH,OACAQ,EAAML,EAANK,OACAC,EAAON,EAAPM,QACAC,EAAYP,EAAZO,aACAC,EAAYR,EAAZQ,aACAC,EAAaT,EAAbS,cASF,OACExN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACF+K,UAAU,OACViC,SAAUK,EACVG,YAAU,EACVvN,GAAI,SAAA5D,GAAK,MAAK,CACZ6D,MAAOzB,EAAO,aAAU0B,EACxBC,SAAU,OACV,QAAS,CACPF,MAAO,QAEV,EAAEG,SAAA,EAEH5C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACC,QAAQ,KAAKN,GAAI,CAC3BO,SAAU,OACVC,WAAY,OACZC,aAAc,QACdL,SAAC,gBAEH5C,EAAAA,EAAAA,KAACgQ,GAAAA,EAAe,CACd1B,KAAK,QACLM,UAAQ,EACRhH,MAAOsH,EAAOxI,MACd2C,SAAUwG,EACVI,WAAS,EACTC,QAASR,EAAOhJ,OAASiJ,EAAQjJ,MACjCyJ,aAAcT,EAAOhJ,OAASiJ,EAAQjJ,QAAS0J,EAAAA,GAAAA,GAAmB,SAClE5G,YAAY,QACZkE,MAAM,QACNlL,GAAI,CACFoI,GAAI,MAIR5K,EAAAA,EAAAA,KAACqQ,GAAAA,EAAgB,CACfrR,SACEgB,EAAAA,EAAAA,KAACiJ,EAAAA,EAAQ,CACPqF,KAAK,YACLpF,QAASgG,EAAOzH,UAChB4B,SAAUwG,IAGdnC,MAAM,YACNlL,GAAI,CACFoI,GAAI,MAIR5K,EAAAA,EAAAA,KAACsQ,GAAAA,EAAU,CACT1I,MAAOsH,EAAOpI,SACduC,SAAU,SAAAkH,GACRT,EAAc,WAAYS,EAC5B,EACAvF,aAAW,EACXxI,GAAI,CACFoI,GAAI,MAIR5K,EAAAA,EAAAA,KAACtB,GAAAA,EAAY,CACX4P,KAAK,OACL1G,MAAOsH,EAAOb,KACd7E,YAAY,sBACZH,SAAU,SAAAkH,GAAQ,OAAIT,EAAc,OAAQS,EAAS,EACrDC,QAAStC,EACT9N,OAAQ,CACNpB,QAAS,CACPgK,OAAQ,OACR/F,aAAcrE,EAAM6R,QAAQ,QAKlCzQ,EAAAA,EAAAA,KAACgQ,GAAAA,EAAe,CACd1B,KAAK,OACLM,UAAQ,EACRhH,MAAOsH,EAAOvI,KACd0C,SAAUwG,EACVpG,WAAS,EACTiH,QAAS,EACTlH,YAAY,OACZkE,MAAM,UAGRpL,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACPW,QAAS,OACTC,eAAgB,WAChBC,GAAI,EACJ,yBAA0B,CACxBC,GAAI,IAENV,SAAA,EACA5C,EAAAA,EAAAA,KAACuD,EAAAA,EAAM,CACLC,QAAS5C,EACTkC,QAAQ,OAAMF,SACf,YAEDN,EAAAA,EAAAA,MAACiB,EAAAA,EAAM,CACLoN,KAAK,SACL7N,QAAQ,YACRW,SAAUrC,EAAMsC,QAAQC,SAASiN,EAAAA,IAAahO,SAAA,CAC/C,MAGGxB,EAAMsC,QAAQC,SAASiN,EAAAA,MACrB5Q,EAAAA,EAAAA,KAAC6D,EAAAA,EAAY,YAM3B,ECnMagN,GAAiB,SAAHlQ,GAAqC,IAAhCC,EAAOD,EAAPC,QAASkQ,EAAQnQ,EAARmQ,SACjChQ,GAAWC,EAAAA,EAAAA,KAEXnC,GAAQC,EAAAA,EAAAA,KAERmC,GAAOC,EAAAA,EAAAA,GAAcrC,EAAMsC,YAAYC,GAAG,OAE1CC,GAAQC,EAAAA,EAAAA,GAAeC,EAAAA,GAEvBC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACTlB,GAASiQ,EAAAA,EAAAA,IAAeD,EAAU5O,KAAI,OAE5CtB,IAAS,wBAAAkB,EAAAK,OAAA,GAAAP,EAAA,KACV,kBAJa,OAAAJ,EAAAY,MAAA,KAAAC,UAAA,KAMd,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,SAAA5D,GAAK,MAAK,CACZ6D,MAAOzB,EAAO,aAAU0B,EACxBC,SAAU,OACV,QAAS,CACPF,MAAO,QAEV,EAAEG,SAAA,EAEH5C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACC,QAAQ,KAAKN,GAAI,CAC3BO,SAAU,OACVC,WAAY,OACZC,aAAc,QACdL,SAAC,mBAEH5C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACL,GAAI,SAAA5D,GAAK,MAAK,CACxBmE,SAAU,OACVC,WAAY,OACZ3D,MAAOT,EAAMM,QAAQC,OAAO+D,KAAK,GAClC,EAAEN,SAAC,2CAEJN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACPW,QAAS,OACTC,eAAgB,WAChBC,GAAI,EACJ,yBAA0B,CACxBC,GAAI,IAENV,SAAA,EACA5C,EAAAA,EAAAA,KAACuD,EAAAA,EAAM,CACLC,QAAS5C,EACTkC,QAAQ,OAAMF,SACf,YAEDN,EAAAA,EAAAA,MAACiB,EAAAA,EAAM,CACLC,QAASjC,EACTuB,QAAQ,YACRzD,MAAM,QACNoE,SAAUrC,EAAMsC,QAAQC,SAASqN,EAAAA,IAAkBpO,SAAA,CACpD,SAGGxB,EAAMsC,QAAQC,SAASqN,EAAAA,MACrBhR,EAAAA,EAAAA,KAAC6D,EAAAA,EAAY,YAM3B,ECzDaoN,GAAe,SAAHtQ,GAAqC,IAAhCC,EAAOD,EAAPC,QAASkQ,EAAQnQ,EAARmQ,SAC/BhQ,GAAWC,EAAAA,EAAAA,KAEXnC,GAAQC,EAAAA,EAAAA,KAERmC,GAAOC,EAAAA,EAAAA,GAAcrC,EAAMsC,YAAYC,GAAG,OAE1CC,GAAQC,EAAAA,EAAAA,GAAeC,EAAAA,GAE7BgD,GAAqBC,EAAAA,EAAAA,UAAsB,CACzC+J,MAAc,OAARwC,QAAQ,IAARA,OAAQ,EAARA,EAAUxC,OAAQ,KADnBE,GAEL/J,EAAAA,EAAAA,GAAAH,EAAA,GAFe,GAIXmK,EAAmBC,EAAAA,GAAW,CAClCJ,KAAMI,EAAAA,KACHC,OACAC,aAGCC,EAAa,eAAArN,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACdlB,GAASoQ,EAAAA,EAAAA,IAAe,CAC5BhP,GAAI4O,EAAU5O,GACdoM,KAAMY,EAAOZ,QACZ,OAEH1N,IAAS,wBAAAkB,EAAAK,OAAA,GAAAP,EAAA,KACV,kBAPkB,OAAAJ,EAAAY,MAAA,KAAAC,UAAA,KASnBgN,GAOEC,EAAAA,EAAAA,IAAU,CACRb,iBAAkBA,EAClBc,SAAUV,EACVW,cAAehB,EACfiB,oBAAoB,IAVtBP,EAAMG,EAANH,OACAQ,EAAML,EAANK,OACAC,EAAON,EAAPM,QACAC,EAAYP,EAAZO,aACAC,EAAYR,EAAZQ,aASF,OACEvN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACF+K,UAAU,OACViC,SAAUK,EACVG,YAAU,EACVvN,GAAI,SAAA5D,GAAK,MAAK,CACZ6D,MAAOzB,EAAO,aAAU0B,EACxBC,SAAU,OACV,QAAS,CACPF,MAAO,QAEV,EAAEG,SAAA,EAEH5C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACC,QAAQ,KAAKN,GAAI,CAC3BO,SAAU,OACVC,WAAY,OACZC,aAAc,QACdL,SAAC,iBAEH5C,EAAAA,EAAAA,KAACgQ,GAAAA,EAAe,CACd1B,KAAK,OACLM,UAAQ,EACRhH,MAAOsH,EAAOZ,KACdjF,SAAUwG,EACVI,WAAS,EACTC,QAASR,EAAOpB,MAAQqB,EAAQrB,KAChC6B,aAAcT,EAAOpB,MAAQqB,EAAQrB,OAAQ8B,EAAAA,GAAAA,GAAmB,QAChE5G,YAAY,WACZkE,MAAM,cAGRpL,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACPW,QAAS,OACTC,eAAgB,WAChBC,GAAI,EACJ,yBAA0B,CACxBC,GAAI,IAENV,SAAA,EACA5C,EAAAA,EAAAA,KAACuD,EAAAA,EAAM,CACLC,QAAS5C,EACTkC,QAAQ,OAAMF,SACf,YAEDN,EAAAA,EAAAA,MAACiB,EAAAA,EAAM,CACLoN,KAAK,SACL7N,QAAQ,YACRW,SAAUrC,EAAMsC,QAAQC,SAASwN,EAAAA,IAAkBvO,SAAA,CACpD,SAGGxB,EAAMsC,QAAQC,SAASwN,EAAAA,MACrBnR,EAAAA,EAAAA,KAAC6D,EAAAA,EAAY,YAM3B,E,4CClGauN,GAAkB,SAAHzQ,GAA2F,IAAtF+F,EAAK/F,EAAL+F,MAAO2K,EAAW1Q,EAAX0Q,YAAaC,EAAc3Q,EAAd2Q,eAAgBC,EAAU5Q,EAAV4Q,WAAYC,EAAa7Q,EAAb6Q,cAAeC,EAAQ9Q,EAAR8Q,SACxF7S,GAAQC,EAAAA,EAAAA,KAERmC,GAAOC,EAAAA,EAAAA,GAAcrC,EAAMsC,YAAYC,GAAG,OAEhDK,GAAwBkQ,EAAAA,EAAAA,YAAWC,GAAAA,GAA5BjF,EAAIlL,EAAJkL,KAAMkF,EAAOpQ,EAAPoQ,QAEb,OACEtP,EAAAA,EAAAA,MAAAwG,EAAAA,SAAA,CAAAlG,SAAA,EACEN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACPW,QAAS,OACTC,eAAgB,gBAChB2F,WAAY,SACZC,OAAQhI,EAAI,GAAA6D,OAAMgN,GAAsB,WAAOnP,EAC/CkI,GAAIkH,IACJlP,SAAA,EACAN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACPW,QAAS,OACT4F,WAAY,UACZnG,SAAA,EAEG5B,IACChB,EAAAA,EAAAA,KAACoL,EAAAA,EAAU,CAAC5H,QAAS,kBAAMoO,GAASlF,EAAK,EAAElK,GAAI,SAAA5D,GAAK,MAAK,CACvDuK,EAAG,EACH7F,GAAI,EACJjE,MAAOT,EAAMM,QAAQC,OAAO4S,kBAC7B,EAAEnP,UACC5C,EAAAA,EAAAA,KAACgS,GAAAA,EAAQ,OAIjBhS,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACC,QAAQ,KAAKN,GAAI,SAAA5D,GAAK,MAAK,CACrCmE,SAAU,OACVC,WAAY,OACZ3D,MAAOT,EAAMM,QAAQC,OAAO4S,kBAC7B,EAAEnP,SAAE8D,OAIL+K,IACEnP,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,SAAA5D,GAAK,MAAK,CACjBuE,QAAS,OACT,QAAS,CACPJ,SAAU,OACV1D,MAAOT,EAAMM,QAAQC,OAAO4S,mBAE/B,EAAEnP,SAAA,EACC5C,EAAAA,EAAAA,KAACoL,EAAAA,EAAU,CAAC5H,QAAS,kBAAMiO,EAASQ,SAAQ,EAAK,EAACrP,UAC9C5C,EAAAA,EAAAA,KAACkS,GAAAA,EAA0B,OAE/BlS,EAAAA,EAAAA,KAACoL,EAAAA,EAAU,CAAC5H,QAAS,kBAAMiO,EAASU,WAAU,EAAK,EAACvP,UAChD5C,EAAAA,EAAAA,KAACuL,EAAAA,EAAiB,aAMhCvL,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAACC,GAAI,CACPW,QAAS,OACTC,eAAgB,WAChB2F,WAAY,SACZC,OAAO,GAADnE,OAAKuN,GAAwB,MACnCxH,GAAIkH,IACJlP,UACA5C,EAAAA,EAAAA,KAACqS,GAAAA,GAAgB,CACfhB,YAAaA,EACbC,eAAgBA,EAChBC,WAAYA,EACZC,cAAeA,QAKzB,EC7DaK,GAAyB,GACzBO,GAA2B,GAC3BN,GAA0B,EAK1BQ,GAAY,SAAH3R,GAAmF,IAA9E4R,EAAM5R,EAAN4R,OAAQC,EAAY7R,EAAZ6R,aAAcC,EAAc9R,EAAd8R,eAAgBC,EAAU/R,EAAV+R,WAAYC,EAAShS,EAATgS,UAAWnQ,EAAE7B,EAAF6B,GAChF1B,GAAWC,EAAAA,EAAAA,KAEXnC,GAAQC,EAAAA,EAAAA,KAERmC,GAAOC,EAAAA,EAAAA,GAAcrC,EAAMsC,YAAYC,GAAG,OAE1CyR,GAAsB7T,EAAAA,EAAAA,UAAQ,kBAAMiC,EAAO,EAAI,CAAC,GAAE,CAACA,IACnD6R,GAAyB9T,EAAAA,EAAAA,UAAQ,kBAAMiC,EAAO,EAAI,CAAC,GAAE,CAACA,IAE5DsD,GAAgCC,EAAAA,EAAAA,UAAiB,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CwO,EAAQtO,EAAA,GAAEuO,EAAWvO,EAAA,GAE5BM,GAA8BP,EAAAA,EAAAA,WAAkB,GAAMQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAA/CkO,EAAOjO,EAAA,GAAEkO,EAAUlO,EAAA,GAC1BG,GAAwCX,EAAAA,EAAAA,WAAkB,GAAMY,GAAAV,EAAAA,EAAAA,GAAAS,EAAA,GAAzDgO,EAAY/N,EAAA,GAAEgO,EAAehO,EAAA,GACpCG,GAA4Cf,EAAAA,EAAAA,WAAkB,GAAMgB,GAAAd,EAAAA,EAAAA,GAAAa,EAAA,GAA7DyL,EAAcxL,EAAA,GAAE6N,EAAiB7N,EAAA,GAExCG,GAAoCnB,EAAAA,EAAAA,UAAuB,MAAKoB,GAAAlB,EAAAA,EAAAA,GAAAiB,EAAA,GAAzD1B,EAAU2B,EAAA,GAAE1B,EAAa0B,EAAA,IAEhCc,EAAAA,EAAAA,YAAU,WACRxC,EAAcuO,EAAajE,MAAK,SAAA1N,GAAI,OAAIA,EAAKqB,MAAiB,OAAV8B,QAAU,IAAVA,OAAU,EAAVA,EAAY9B,GAAE,KAAK,KACzE,GAAG,CAACsQ,KAEJ/L,EAAAA,EAAAA,YAAU,WACRsM,EAAY,EACd,GAAG,CAACL,IAEJ,IAAMW,GAAoBnM,EAAAA,EAAAA,cAAY,SAACoM,GACrCxS,GAASoD,EAAAA,EAAAA,IAAWoP,GACtB,GAAG,IAEGC,GAAmBxU,EAAAA,EAAAA,UAAQ,WAC/B,IAAMyU,EAAiBC,SAAS7U,EAAM6R,QAAQmC,IAAwBf,GAClE4B,SAAS7U,EAAM6R,QAAQqB,KAA4BM,GACnDqB,SAAS7U,EAAM6R,QAAQqB,KAA4B2B,SAAS7U,EAAM6R,QApCnC,IACH,GAoCLgD,SAAS7U,EAAM6R,QAAQoC,IAElD,MAAM,gBAANhO,OAAuB2O,EAAc,MACvC,GAAG,CAACX,EAAwBD,EAAqBhU,IAE3C8U,GAAe3U,EAAAA,EAAAA,UAAQ,WAC3B,IAAKyT,EAAamB,OAChB,OACE3T,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACC,QAAQ,YAAYN,GAAI,SAAA5D,GAAK,MAAK,CAC5CS,MAAOT,EAAMM,QAAQC,OAAO4S,kBAC7B,EAAEnP,SAAC,aAIR,IAAMgR,EAAiB,SAACxS,GACtB,OAAQuR,GACN,IAAK,UACH,OAAOkB,IAAAA,OAASzS,GAAO,SAAAP,GAAI,MAAI,CAACA,EAAK6F,MAAO7F,EAAKyK,cAAc,IACjE,IAAK,cACH,OAAOuI,IAAAA,OAASzS,GAAO,SAAAP,GAAI,MAAI,EAAEA,EAAK4G,UAAW5G,EAAKyK,cAAc,IACtE,IAAK,cACH,OAAOuI,IAAAA,OAASzS,GAAO,SAAAP,GAAI,MAAI,EAAEA,EAAKyG,UAAWzG,EAAKyK,cAAc,IACtE,IAAK,GACH,OAAOuI,IAAAA,OAASzS,GAAO,SAAAP,GAAI,OAAIA,EAAKyK,aAAa,IAEvD,EAEA,OAAQoH,GACN,IAAK,GACH,OACEkB,EAAepB,GACZjS,KAAI,SAAAM,GAAI,OACPb,EAAAA,EAAAA,KAAC2M,EAAS,CACR9L,KAAMA,EACNqD,WAAYmP,EACZrP,WAAYA,EACZC,cAAeA,GACVpD,EAAKqB,GACV,IAGV,IAAK,cACH,OACEI,EAAAA,EAAAA,MAAAwG,EAAAA,SAAA,CAAAlG,SAAA,EACEN,EAAAA,EAAAA,MAACwR,EAAAA,EAAI,CACHlM,MAAOkL,EACPzJ,SAAU,SAAChC,EAAGO,GAAK,OAAKmL,EAAYnL,EAAM,EAC1CpF,GAAI,CACFoI,GAAI,EACJ,iBAAkB,CAChBmJ,SAAU,QACVC,cAAe,eAEjBpR,SAAA,EAEF5C,EAAAA,EAAAA,KAACiU,EAAAA,EAAG,CAACvG,MAAM,WACX1N,EAAAA,EAAAA,KAACiU,EAAAA,EAAG,CAACvG,MAAM,kBAGb1N,EAAAA,EAAAA,KAAC4N,EAAe,CACdC,aAAciF,EACdhF,MAAO,CACL,CACElL,SAAUgR,EAAepB,EAAa0B,QAAO,SAAArT,GAAI,OAAKA,EAAKyG,SAAS,KACjE/G,KAAI,SAAAM,GAAI,OACPb,EAAAA,EAAAA,KAAC2M,EAAS,CACR9L,KAAMA,EACNqD,WAAYmP,EACZrP,WAAYA,EACZC,cAAeA,GACVpD,EAAKqB,GACV,KAGR,CACEU,SAAUgR,EAAepB,EAAa0B,QAAO,SAAArT,GAAI,OAAIA,EAAKyG,SAAS,KAChE/G,KAAI,SAAAM,GAAI,OACPb,EAAAA,EAAAA,KAAC2M,EAAS,CACR9L,KAAMA,EACNqD,WAAYmP,EACZrP,WAAYA,EACZC,cAAeA,GACVpD,EAAKqB,GACV,WAOlB,IAAK,cACH,OACEI,EAAAA,EAAAA,MAAAwG,EAAAA,SAAA,CAAAlG,SAAA,EACEN,EAAAA,EAAAA,MAACwR,EAAAA,EAAI,CACHlM,MAAOkL,EACPzJ,SAAU,SAAChC,EAAGO,GAAK,OAAKmL,EAAYnL,EAAM,EAC1CpF,GAAI,CACFoI,GAAI,EACJ,iBAAkB,CAChBmJ,SAAU,QACVC,cAAe,eAEjBpR,SAAA,EAEF5C,EAAAA,EAAAA,KAACiU,EAAAA,EAAG,CAACvG,MAAM,eACX1N,EAAAA,EAAAA,KAACiU,EAAAA,EAAG,CAACvG,MAAM,sBAGb1N,EAAAA,EAAAA,KAAC4N,EAAe,CACdC,aAAciF,EACdhF,MAAO,CACL,CACElL,SAAUgR,EAAepB,EAAa0B,QAAO,SAAArT,GAAI,OAAIA,EAAK4G,SAAS,KAChElH,KAAI,SAAAM,GAAI,OACPb,EAAAA,EAAAA,KAAC2M,EAAS,CACR9L,KAAMA,EACNqD,WAAYmP,EACZrP,WAAYA,EACZC,cAAeA,GACVpD,EAAKqB,GACV,KAGR,CACEU,SAAUgR,EAAepB,EAAa0B,QAAO,SAAArT,GAAI,OAAKA,EAAK4G,SAAS,KACjElH,KAAI,SAAAM,GAAI,OACPb,EAAAA,EAAAA,KAAC2M,EAAS,CACR9L,KAAMA,EACNqD,WAAYmP,EACZrP,WAAYA,EACZC,cAAeA,GACVpD,EAAKqB,GACV,WAQtB,GAAG,CAACsQ,EAAcE,EAAYC,EAAWG,EAAUO,EAAmBrP,IAEtE,OACE1B,EAAAA,EAAAA,MAAAwG,EAAAA,SAAA,CAAAlG,SAAA,EACEN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACP2R,SAAU,EACVhR,QAAS,QACTP,SAAA,EACAN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,SAAA5D,GAAK,OAAAsB,EAAAA,EAAAA,GAAA,CACZiU,SAAU,EACVhR,QAAS,OACTqF,cAAe,SACfpF,eAAgB,gBAChBuF,GAAI3H,EAAO,EAAI,EACf0H,GAAIkK,EACJhK,GAAIiK,EACJ5T,WAAYL,EAAMM,QAAQC,OAAOiV,SAC7B5R,GAAsC,CAAC,EAAC,EAC3CI,SAAA,EACDN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAK,SAAA,EACF5C,EAAAA,EAAAA,KAACoR,GAAe,CACd1K,MAAO6L,EAAO7L,MACd2K,YAAakB,EAAOlB,YACpBC,eAAgBiB,EAAOjB,eACvBC,WAAYgB,EAAOhB,WACnBC,cAAee,EAAOf,cACtBC,SACEc,EAAOd,SACL,CACE4C,KAAMnB,EACNjB,QAASkB,EACTmB,OAAQvD,EACRoB,UAAWiB,QACT1Q,KAIV1C,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAACC,GAAI,CACP0I,UAAWqI,EACXpI,SAAU,OACV7H,IAAK,GACLV,SACC8Q,QAILpR,EAAAA,EAAAA,MAACiB,EAAAA,EAAM,CACLT,QAAQ,OACRiK,UAAU,aACVvJ,QAAS,kBAAMyP,GAAW,EAAK,EAC/BzQ,GAAI,SAAA5D,GAAK,MAAK,CACZuE,QAAS,OACTC,eAAgB,aAChB2F,WAAY,SACZI,EAAG,EACHlK,WAAYL,EAAMM,QAAQC,OAAOoV,cACjC,UAAW,CACTtV,WAAY,WAEd,SAAU,CACRI,MAAOT,EAAMM,QAAQsV,OAAOC,OAE/B,EAAE7R,SAAA,EAEH5C,EAAAA,EAAAA,KAAC0U,EAAAA,EAAO,CAAClS,GAAI,CACXc,GAAI,KACF,oBAMRtD,EAAAA,EAAAA,KAAC+D,EAAY,CAACC,WAAYA,EAAYC,cAAeA,EAAeC,WAAYmP,QAGlFrT,EAAAA,EAAAA,KAACyM,EAAAA,EAAW,CACVC,KAAMsG,EACNpS,QAAS,kBAAMqS,GAAW,EAAM,EAACrQ,UAEjC5C,EAAAA,EAAAA,KAACgO,GAAO,CAACpN,QAAS,kBAAMqS,GAAW,EAAM,EAAEhF,YAAawE,MAIxDA,IACEnQ,EAAAA,EAAAA,MAAAwG,EAAAA,SAAA,CAAAlG,SAAA,EACI5C,EAAAA,EAAAA,KAACyM,EAAAA,EAAW,CACRC,KAAMwG,EACNtS,QAAS,kBAAMuS,GAAgB,EAAM,EAACvQ,UAEtC5C,EAAAA,EAAAA,KAACiR,GAAY,CACTrQ,QAAS,kBAAMuS,GAAgB,EAAM,EACrCrC,SAAU2B,OAIlBzS,EAAAA,EAAAA,KAACyM,EAAAA,EAAW,CACRC,KAAMqE,EACNnQ,QAAS,kBAAMwS,GAAkB,EAAM,EAACxQ,UAExC5C,EAAAA,EAAAA,KAAC6Q,GAAc,CACXjQ,QAAS,kBAAMwS,GAAkB,EAAM,EACvCtC,SAAU2B,WAOhC,C,wIC/TakC,EAAiE,CAC5E,CAACjH,MAAO,WAAY9F,MAAO,IAC3B,CAAC8F,MAAO,oBAAqB9F,MAAO,eACpC,CAAC8F,MAAO,sBAAuB9F,MAAO,gBAK3BgN,EAA+D,CAC1E,CAAClH,MAAO,aAAc9F,MAAO,IAC7B,CAAC8F,MAAO,gBAAiB9F,MAAO,WAChC,CAAC8F,MAAO,oBAAqB9F,MAAO,eACpC,CAAC8F,MAAO,oBAAqB9F,MAAO,gBAUzByK,EAAmB,SAAH1R,GAA0E,IAArE0Q,EAAW1Q,EAAX0Q,YAAaC,EAAc3Q,EAAd2Q,eAAgBC,EAAU5Q,EAAV4Q,WAAYC,EAAa7Q,EAAb6Q,cACzE,OACElP,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACPW,QAAS,OACT,yBAA0B,CACxBG,GAAI,IAENV,SAAA,EACA5C,EAAAA,EAAAA,KAACtB,EAAAA,EAAY,CACXyB,gBAAgB,eAChByH,MAAOyJ,EACPhI,SAAU,SAAAkH,GACRe,EAAef,EACjB,EACAC,QAASmE,KAGX3U,EAAAA,EAAAA,KAACtB,EAAAA,EAAY,CACXyB,gBAAgB,eAChByH,MAAO2J,EACPlI,SAAU,SAAAkH,GACRiB,EAAcjB,EAChB,EACAC,QAASoE,MAIjB,C","sources":["components/common/CommonSelect.tsx","components/pages/private/tasks/modals/DeleteTask.tsx","components/pages/private/tasks/TaskDetails.tsx","components/pages/private/tasks/TasksItem.tsx","components/common/CommonTabPanels.tsx","components/pages/private/tasks/modals/AddTask.tsx","components/pages/private/tasks/modals/DeleteTaskList.tsx","components/pages/private/tasks/modals/EditTaskList.tsx","components/pages/private/tasks/TasksPageHeader.tsx","components/pages/private/tasks/TasksPage.tsx","components/pages/private/tasks/TasksPageFilters.tsx"],"sourcesContent":["import Select, {CSSObjectWithLabel, Props as SelectProps} from \"react-select\";\r\nimport {ISelectOption} from \"../../typescript/common\";\r\nimport {useTheme} from \"@mui/material\";\r\nimport {StylesProps} from \"react-select/dist/declarations/src/styles\";\r\nimport {CSSObject} from \"@emotion/styled\";\r\nimport {useMemo} from \"react\";\r\n\r\ninterface IProps<Option, IsMulti extends boolean> extends Partial<Omit<SelectProps<Option, IsMulti>, 'value' | 'onChange' | 'options' | 'styles'>> {\r\n  value: SelectProps<Option, IsMulti>['value'],\r\n  onChange: SelectProps<Option, IsMulti>['onChange'],\r\n  options: SelectProps<Option, IsMulti>['options'],\r\n  styles?: Partial<Record<keyof StylesProps<Option, IsMulti, any>, CSSObject>>,\r\n}\r\n\r\nconst stylesComponents: (keyof StylesProps<any, any, any>)[] = [\r\n  'clearIndicator',\r\n  'control',\r\n  'dropdownIndicator',\r\n  'group',\r\n  'groupHeading',\r\n  'indicatorsContainer',\r\n  'indicatorSeparator',\r\n  'input',\r\n  'loadingIndicator',\r\n  'menu',\r\n  'menuList',\r\n  'menuPortal',\r\n  'loadingMessage',\r\n  'noOptionsMessage',\r\n  'multiValue',\r\n  'multiValueLabel',\r\n  'multiValueRemove',\r\n  'option',\r\n  'placeholder',\r\n  'singleValue',\r\n  'valueContainer',\r\n]\r\n\r\nexport const CommonSelect = <T, IsMulti extends boolean>(props: IProps<ISelectOption<T>, IsMulti>) => {\r\n  const theme = useTheme()\r\n\r\n  const defaultStyles: IProps<any, any>['styles'] = useMemo(() => {\r\n    return {\r\n      control: {\r\n        background: theme.palette.custom.formItemBg,\r\n        '& *': {\r\n          color: theme.palette.text.primary,\r\n        },\r\n      },\r\n      singleValue: {\r\n        '&, & *': {\r\n          color: theme.palette.text.primary,\r\n        },\r\n      },\r\n      multiValue: {\r\n        '&, & *': {\r\n          color: theme.palette.text.primary,\r\n        },\r\n      },\r\n      menu: {\r\n        zIndex: 2,\r\n        marginTop: 0,\r\n        background: theme.palette.custom.formItemBg,\r\n      },\r\n      option: {\r\n        background: theme.palette.custom.formItemBg,\r\n        '&:hover': {\r\n          background: theme.palette.custom.formItemHoverBg,\r\n        },\r\n        '&.react-select__option--is-selected': {\r\n          background: theme.palette.custom.formItemSelectedBg,\r\n        },\r\n      },\r\n    }\r\n  }, [theme])\r\n\r\n  return (\r\n    <Select<Readonly<ISelectOption<T>>, IsMulti>\r\n      {...props}\r\n      classNamePrefix={props.classNamePrefix || \"react-select\"}\r\n      styles={\r\n        Object.fromEntries(\r\n          stylesComponents.map(item => [\r\n            item,\r\n            (baseStyles: CSSObjectWithLabel) => ({\r\n              ...baseStyles,\r\n              ...((defaultStyles[item]) || {}),\r\n              ...((props.styles && props.styles[item]) || {}),\r\n            })\r\n          ])\r\n        )\r\n      }\r\n    />\r\n  )\r\n}","import {useAppDispatch, useAppSelector} from \"redux/hooks\";\r\nimport React from \"react\";\r\nimport {Box, Button, Typography, useMediaQuery, useTheme} from \"@mui/material\";\r\nimport {ITask} from \"../../../../../typescript/entities\";\r\nimport {deleteTask} from \"../../../../../redux/features/tasks/tasksThunks\";\r\nimport {selectTasks} from \"../../../../../redux/selectors/tasks\";\r\nimport {ButtonLoader} from \"../../../../common/ButtonLoader\";\r\nimport {DELETE_TASK} from \"../../../../../redux/variables\";\r\n\r\ninterface IProps {\r\n  onClose: () => void,\r\n  task: ITask | null,\r\n}\r\n\r\nexport const DeleteTask = ({onClose, task}: IProps) => {\r\n  const dispatch = useAppDispatch()\r\n\r\n  const theme = useTheme()\r\n\r\n  const upMd = useMediaQuery(theme.breakpoints.up('md'))\r\n\r\n  const tasks = useAppSelector(selectTasks)\r\n\r\n  const onDelete = async () => {\r\n    await dispatch(deleteTask(task!.id))\r\n\r\n    onClose()\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={theme => ({\r\n        width: upMd ? '310px' : undefined,\r\n        maxWidth: '100%',\r\n        '& > *': {\r\n          width: '100%',\r\n        }\r\n      })}\r\n    >\r\n      <Typography variant=\"h3\" sx={{\r\n        fontSize: '24px',\r\n        lineHeight: '24px',\r\n        marginBottom: '24px',\r\n      }}>Are you sure?</Typography>\r\n\r\n      <Typography sx={theme => ({\r\n        fontSize: '14px',\r\n        lineHeight: '20px',\r\n        color: theme.palette.custom.grey['2'],\r\n      })}>Task will be permanently deleted</Typography>\r\n\r\n      <Box sx={{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        mt: 4,\r\n        '& > *:not(:last-child)': {\r\n          mr: 2,\r\n        },\r\n      }}>\r\n        <Button\r\n          onClick={onClose}\r\n          variant=\"text\"\r\n        >Cancel</Button>\r\n\r\n        <Button\r\n          onClick={onDelete}\r\n          variant=\"contained\"\r\n          color=\"error\"\r\n          disabled={tasks.loading.includes(DELETE_TASK)}\r\n        >\r\n          Delete\r\n          {\r\n            tasks.loading.includes(DELETE_TASK) &&\r\n              <ButtonLoader/>\r\n          }\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}","import {\r\n  Box,\r\n  Checkbox,\r\n  Divider,\r\n  IconButton,\r\n  InputLabel,\r\n  TextField,\r\n  Typography,\r\n  useMediaQuery,\r\n  useTheme\r\n} from \"@mui/material\";\r\nimport React, {MouseEventHandler, useCallback, useEffect, useMemo, useRef, useState} from \"react\";\r\nimport {IPartialTask, ITask} from \"../../../../typescript/entities\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport {getDateStringFromVerbal, getFormattedDate, getUTCDueDateString} from \"../../../../utils/helpers/dates\";\r\nimport TodayIcon from '@mui/icons-material/Today';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\nimport moment from \"moment/moment\";\r\nimport {StaticDatePicker} from \"@mui/x-date-pickers\";\r\nimport {Moment} from \"moment\";\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\r\nimport {DeleteTask} from \"./modals/DeleteTask\";\r\nimport {Resizable, ResizeCallbackData} from \"react-resizable\";\r\nimport {CommonModal} from \"../../../common/CommonModal\";\r\nimport {Transition, TransitionStatus} from \"react-transition-group\";\r\nimport {Theme} from \"@mui/material/styles\";\r\nimport {SystemStyleObject} from \"@mui/system/styleFunctionSx/styleFunctionSx\";\r\n\r\ninterface IProps {\r\n  activeTask: ITask | null,\r\n  setActiveTask: (newValue: ITask | null) => void,\r\n  updateTask: (updatedPartialTask: IPartialTask) => void,\r\n}\r\n\r\nexport const defaultDetailsWidth = 320\r\nexport const minDetailsWidth = 320\r\nexport const maxDetailsWidth = 600\r\n\r\nexport const taskDetailsTransitionDuration = 200\r\n\r\nexport const TasksDetails = ({activeTask, setActiveTask, updateTask}: IProps) => {\r\n  const detailsRef = useRef(null)\r\n\r\n  const theme = useTheme()\r\n\r\n  const upMd = useMediaQuery(theme.breakpoints.up('md'))\r\n  const upSm = useMediaQuery(theme.breakpoints.up('sm'))\r\n\r\n  const [detailsWidth, setDetailsWidth] = useState<number>(defaultDetailsWidth)\r\n\r\n  const detailsWidthCss = useMemo<string>(() => {\r\n    return upSm ?\r\n      `${detailsWidth}px` :\r\n      '100vw'\r\n  }, [detailsWidth, upSm])\r\n\r\n  const [detailsTransition, setDetailsTransition] = useState<boolean>(true)\r\n\r\n  const [localTitleValue, setLocalTitleValue] = useState<string>('')\r\n\r\n  const [localNoteValue, setLocalNoteValue] = useState<string>('')\r\n\r\n  const [showDueDateOptions, setShowDueDateOptions] = useState<boolean>(false)\r\n\r\n  const [showDueDateDatepicker, setShowDueDateDatepicker] = useState<boolean>(false)\r\n\r\n  const [datepickerValue, setDatepickerValue] = useState<Moment | null>(null)\r\n\r\n  const [deleteTask, setDeleteTask] = useState<boolean>(false)\r\n\r\n  useEffect(() => {\r\n    setDetailsWidth(defaultDetailsWidth)\r\n  }, [upSm])\r\n\r\n  useEffect(() => {\r\n    setLocalTitleValue(activeTask?.title || '')\r\n    setLocalNoteValue(activeTask?.note || '')\r\n\r\n    const datepickerStringValue = datepickerValue && getUTCDueDateString(datepickerValue)\r\n\r\n    if (activeTask && activeTask.due_date !== datepickerStringValue) {\r\n      setDatepickerValue(activeTask?.due_date ? moment(activeTask.due_date) : null)\r\n    }\r\n  }, [activeTask])\r\n\r\n  useEffect(() => {\r\n    if (!showDueDateOptions) {\r\n      setShowDueDateDatepicker(false)\r\n    }\r\n  }, [showDueDateOptions])\r\n\r\n  useEffect(() => {\r\n    const datepickerStringValue = datepickerValue && datepickerValue.toISOString()\r\n\r\n    if (activeTask && activeTask?.due_date !== datepickerStringValue) {\r\n      updateTask({\r\n        id: activeTask.id,\r\n        due_date: datepickerValue && getUTCDueDateString(datepickerValue),\r\n      })\r\n    }\r\n  }, [datepickerValue])\r\n\r\n  const onTitleBlur = useCallback(() => {\r\n    if (localTitleValue) {\r\n      updateTask({\r\n        id: activeTask!.id,\r\n        title: localTitleValue,\r\n      })\r\n    }\r\n  }, [activeTask, localTitleValue, updateTask])\r\n\r\n  const onNoteBlur = useCallback(() => {\r\n    if (localNoteValue) {\r\n      updateTask({\r\n        id: activeTask!.id,\r\n        note: localNoteValue,\r\n      })\r\n    }\r\n  }, [activeTask, localNoteValue, updateTask])\r\n\r\n  const onCompletedClick: MouseEventHandler<HTMLButtonElement> = useCallback((e) => {\r\n    updateTask({\r\n      id: activeTask!.id,\r\n      completed: !activeTask!.completed,\r\n    })\r\n\r\n    e.stopPropagation()\r\n  }, [activeTask, updateTask])\r\n\r\n  const onImportantClick: MouseEventHandler<HTMLDivElement> = useCallback((e) => {\r\n    updateTask({\r\n      id: activeTask!.id,\r\n      important: !activeTask!.important,\r\n    })\r\n\r\n    e.stopPropagation()\r\n  }, [activeTask, updateTask])\r\n\r\n  const onDueDateCloseClick: MouseEventHandler<SVGElement> = useCallback((e) => {\r\n    setShowDueDateOptions(false)\r\n\r\n    if (activeTask!.due_date) {\r\n      updateTask({\r\n        id: activeTask!.id,\r\n        due_date: null,\r\n      })\r\n    }\r\n\r\n    e.stopPropagation()\r\n  }, [activeTask, updateTask])\r\n\r\n  const onDueDateOptionClick = useCallback((value: 'today' | 'tomorrow' | 'currentWeek') => {\r\n    const dateString = getUTCDueDateString(\r\n      moment(getDateStringFromVerbal(value))\r\n    )\r\n\r\n    updateTask({\r\n      id: activeTask!.id,\r\n      due_date: dateString,\r\n    })\r\n  }, [activeTask, updateTask])\r\n\r\n  const onResize = (\r\n    event: React.SyntheticEvent<Element, Event>,\r\n    {node, size, handle}: ResizeCallbackData\r\n  ) => {\r\n    setDetailsWidth(size.width)\r\n  }\r\n\r\n  const getDetailsTransitionStyles = (state: TransitionStatus, theme: Theme): SystemStyleObject<Theme> => {\r\n    switch (state) {\r\n      case \"entering\":\r\n        return {\r\n          right: 0,\r\n        }\r\n      case \"entered\":\r\n        return {\r\n          right: 0,\r\n        }\r\n      case \"exiting\":\r\n        return {\r\n          right: `-${detailsWidthCss}`,\r\n        }\r\n      case \"exited\":\r\n        return {\r\n          right: `-${detailsWidthCss}`,\r\n        }\r\n      default:\r\n        return {}\r\n    }\r\n  };\r\n\r\n  const content = useMemo(() => (\r\n    <Box sx={theme => ({\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'space-between',\r\n      width: '100%',\r\n      minHeight: '100vh',\r\n      pt: upMd ? 8 : 4,\r\n      px: upMd ? 4 : 3,\r\n      pb: upMd ? 4 : 3,\r\n      background: theme.palette.custom.basicBg,\r\n    })}>\r\n      {\r\n        !!activeTask &&\r\n          <>\r\n              <Box>\r\n                  <Box sx={{\r\n                    display: 'flex',\r\n                    alignItems: 'flex-start',\r\n                    pt: '8px',\r\n                  }}>\r\n                      <Box sx={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        height: '28px',\r\n                      }}>\r\n                          <Checkbox\r\n                              checked={activeTask.completed}\r\n                              onClick={onCompletedClick}\r\n                              sx={theme => ({\r\n                                p: 0,\r\n                                color: theme.palette.custom.grey['4'],\r\n                              })}\r\n                          />\r\n                      </Box>\r\n\r\n                      <TextField\r\n                          value={localTitleValue}\r\n                          onChange={e => setLocalTitleValue(e.currentTarget.value)}\r\n                          onBlur={onTitleBlur}\r\n                          placeholder=\"Task name cannot be empty\"\r\n                          multiline={true}\r\n                          sx={theme => ({\r\n                            mx: 4,\r\n                            '&, & *': {\r\n                              '&, &:focus': {\r\n                                border: '0 !important',\r\n                                outline: '0 !important',\r\n                                padding: '0 !important',\r\n                                fontSize: '22px !important',\r\n                                lineHeight: '28px !important',\r\n                                '&::placeholder': {\r\n                                  opacity: '1 !important',\r\n                                  color: `${theme.palette.custom.grey['4']} !important`,\r\n                                }\r\n                              },\r\n                            }\r\n                          })}\r\n                      />\r\n\r\n                      <Box sx={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        height: '28px',\r\n                        ml: 'auto',\r\n                      }}>\r\n                          <Box\r\n                              onClick={onImportantClick}\r\n                              sx={{\r\n                                ml: 'auto',\r\n                                cursor: 'pointer',\r\n                              }}\r\n                          >\r\n                            {\r\n                              activeTask.important ?\r\n                                <StarIcon sx={theme => ({\r\n                                  display: 'block',\r\n                                  fill: theme.palette.custom.red,\r\n                                })}/> :\r\n                                <StarIcon sx={theme => ({\r\n                                  display: 'block',\r\n                                  fill: theme.palette.custom.grey['2'],\r\n                                })}/>\r\n                            }\r\n                          </Box>\r\n                      </Box>\r\n                  </Box>\r\n\r\n                  <Divider sx={{\r\n                    my: 4,\r\n                  }}/>\r\n\r\n                  <Box>\r\n                      <Box\r\n                          onClick={() => {\r\n                            setShowDueDateOptions(!showDueDateOptions)\r\n                          }}\r\n                          sx={theme => ({\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            cursor: 'pointer',\r\n                          })}\r\n                      >\r\n                          <TodayIcon sx={theme => ({\r\n                            color: activeTask!.due_date ? theme.palette.primary.main : theme.palette.custom.grey['4'],\r\n                          })}/>\r\n\r\n                          <Typography variant=\"subtitle1\" sx={theme => ({\r\n                            mx: 3,\r\n                            fontSize: '16px',\r\n                            lineHeight: '24px',\r\n                            fontWeight: 500,\r\n                            color: activeTask!.due_date ? theme.palette.primary.main : theme.palette.custom.grey['4'],\r\n                          })}>\r\n                            {\r\n                              activeTask!.due_date ?\r\n                                `Due ${getFormattedDate(new Date(activeTask.due_date))}` :\r\n                                'Add Due Date'\r\n                            }\r\n                          </Typography>\r\n\r\n                        {\r\n                          (!!activeTask!.due_date || showDueDateOptions) &&\r\n                            <CloseIcon\r\n                                onClick={onDueDateCloseClick}\r\n                                sx={theme => ({\r\n                                  ml: 'auto',\r\n                                  color: theme.palette.custom.grey['4'],\r\n                                })}\r\n                            />\r\n                        }\r\n                      </Box>\r\n\r\n                    {\r\n                      showDueDateOptions &&\r\n                        <>\r\n                            <Box sx={{\r\n                              mt: 3,\r\n                              '& > *': {\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                mb: 2,\r\n                                cursor: 'pointer',\r\n                              },\r\n                            }}>\r\n                                <Box\r\n                                    onClick={() => onDueDateOptionClick('today')}\r\n                                    sx={theme => ({})}\r\n                                >\r\n                                    <TodayIcon/>\r\n\r\n                                    <Typography sx={{\r\n                                      ml: 3,\r\n                                      fontSize: '16px',\r\n                                      lineHeight: '24px',\r\n                                      fontWeight: 500,\r\n                                    }}>Today</Typography>\r\n                                </Box>\r\n                                <Box\r\n                                    onClick={() => onDueDateOptionClick('tomorrow')}\r\n                                    sx={theme => ({})}\r\n                                >\r\n                                    <TodayIcon/>\r\n\r\n                                    <Typography sx={{\r\n                                      ml: 3,\r\n                                      fontSize: '16px',\r\n                                      lineHeight: '24px',\r\n                                      fontWeight: 500,\r\n                                    }}>Tomorrow</Typography>\r\n                                </Box>\r\n                                <Box\r\n                                    onClick={() => onDueDateOptionClick('currentWeek')}\r\n                                    sx={theme => ({})}\r\n                                >\r\n                                    <TodayIcon/>\r\n\r\n                                    <Typography sx={{\r\n                                      ml: 3,\r\n                                      fontSize: '16px',\r\n                                      lineHeight: '24px',\r\n                                      fontWeight: 500,\r\n                                    }}>Current Week</Typography>\r\n                                </Box>\r\n                                <Box\r\n                                    onClick={() => {\r\n                                      setShowDueDateDatepicker(!showDueDateDatepicker)\r\n                                    }}\r\n                                    sx={theme => ({})}\r\n                                >\r\n                                    <TodayIcon/>\r\n\r\n                                    <Typography sx={{\r\n                                      ml: 3,\r\n                                      fontSize: '16px',\r\n                                      lineHeight: '24px',\r\n                                      fontWeight: 500,\r\n                                    }}>Pick a Date</Typography>\r\n\r\n                                  {\r\n                                    showDueDateDatepicker ?\r\n                                      <ExpandLessIcon sx={{\r\n                                        ml: 'auto',\r\n                                      }}/> :\r\n                                      <ExpandMoreIcon sx={{\r\n                                        ml: 'auto',\r\n                                      }}/>\r\n                                  }\r\n                                </Box>\r\n                            </Box>\r\n\r\n                          {\r\n                            showDueDateDatepicker &&\r\n                              <StaticDatePicker\r\n                                  value={datepickerValue}\r\n                                  onChange={setDatepickerValue}\r\n                                  disablePast\r\n                                  sx={{\r\n                                    ml: -4,\r\n                                    '& .MuiDialogActions-root': {\r\n                                      display: 'none',\r\n                                    }\r\n                                  }}\r\n                              />\r\n                          }\r\n                        </>\r\n                    }\r\n                  </Box>\r\n\r\n                  <Divider sx={{\r\n                    my: 4,\r\n                  }}/>\r\n\r\n                  <Box>\r\n                    {\r\n                      localNoteValue &&\r\n                        <InputLabel sx={theme => ({\r\n                          fontSize: '12px',\r\n                          lineHeight: '16px',\r\n                          fontWeight: 500,\r\n                          color: theme.palette.text.primary,\r\n                        })}>Note</InputLabel>\r\n                    }\r\n                      <TextField\r\n                          value={localNoteValue}\r\n                          onChange={e => setLocalNoteValue(e.currentTarget.value)}\r\n                          onBlur={onNoteBlur}\r\n                          placeholder=\"Add note\"\r\n                          multiline={true}\r\n                          sx={theme => ({\r\n                            width: '100%',\r\n                            maxHeight: '300px',\r\n                            overflow: 'auto',\r\n                            '&, & *': {\r\n                              '&, &:focus': {\r\n                                border: '0 !important',\r\n                                outline: '0 !important',\r\n                                padding: '0 !important',\r\n                                fontSize: '16px !important',\r\n                                lineHeight: '24px !important',\r\n                                fontWeight: '500 !important',\r\n                                '&::placeholder': {\r\n                                  opacity: '1 !important',\r\n                                  color: `${theme.palette.custom.grey['4']} !important`,\r\n                                }\r\n                              },\r\n                            }\r\n                          })}\r\n                      />\r\n                  </Box>\r\n\r\n                  <Divider sx={{\r\n                    my: 4,\r\n                  }}/>\r\n              </Box>\r\n\r\n              <Box sx={theme => ({\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                '& *': {\r\n                  color: theme.palette.custom.grey['4'],\r\n                },\r\n              })}>\r\n                  <IconButton\r\n                      onClick={() => setActiveTask(null)}\r\n                      sx={{\r\n                        ml: -2,\r\n                      }}\r\n                  >\r\n                      <ArrowForwardIosIcon/>\r\n                  </IconButton>\r\n                  <Typography variant=\"body1\" sx={{\r\n                    mx: 3,\r\n                    fontSize: '12px',\r\n                    lineHeight: '16px',\r\n                    fontWeight: 500,\r\n                  }}>\r\n                    {`Created ${getFormattedDate(new Date(activeTask.creation_date))}`}\r\n                  </Typography>\r\n                  <IconButton\r\n                      onClick={() => setDeleteTask(true)}\r\n                      sx={{\r\n                        mr: -2,\r\n                      }}\r\n                  >\r\n                      <DeleteOutlineIcon/>\r\n                  </IconButton>\r\n              </Box>\r\n          </>\r\n      }\r\n    </Box>\r\n  ), [activeTask, datepickerValue, localNoteValue, localTitleValue, onCompletedClick, onDueDateCloseClick, onDueDateOptionClick, onImportantClick, onNoteBlur, onTitleBlur, setActiveTask, showDueDateDatepicker, showDueDateOptions, upMd])\r\n\r\n  return (\r\n    <>\r\n      <Transition\r\n        nodeRef={detailsRef}\r\n        in={!!activeTask}\r\n        timeout={taskDetailsTransitionDuration}\r\n        onEntered={() => {\r\n          setDetailsTransition(false)\r\n        }}\r\n        onExit={() => {\r\n          setDetailsTransition(true)\r\n        }}\r\n      >\r\n        {\r\n          state => (\r\n            <Box\r\n              ref={detailsRef}\r\n            >\r\n              {\r\n                upSm ?\r\n                  <Resizable\r\n                    width={detailsWidth as number}\r\n                    onResize={onResize}\r\n                    axis=\"x\"\r\n                    resizeHandles={['w']}\r\n                    minConstraints={[minDetailsWidth, 0]}\r\n                    maxConstraints={[maxDetailsWidth, 0]}\r\n                    handle={(\r\n                      <Box sx={{\r\n                        display: !upMd ? 'none' : undefined,\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: '-5px',\r\n                        width: '10px',\r\n                        height: '100%',\r\n                        cursor: 'ew-resize',\r\n                      }}></Box>\r\n                    )}\r\n                  >\r\n                    <Box sx={{\r\n                      position: 'relative',\r\n                      width: activeTask ? (detailsWidthCss) : 0,\r\n                      minHeight: '100vh',\r\n                      overflowX: 'hidden',\r\n                      transition: detailsTransition ? `${taskDetailsTransitionDuration}ms` : undefined,\r\n                    }}>\r\n                      <Box sx={theme => ({\r\n                        ...getDetailsTransitionStyles(state, theme),\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        width: detailsWidthCss,\r\n                        maxWidth: '100%',\r\n                        transition: detailsTransition ? `${taskDetailsTransitionDuration}ms` : undefined,\r\n                      })}>\r\n                        {content}\r\n                      </Box>\r\n                      <Box sx={{\r\n                        width: '100%',\r\n                        transition: detailsTransition ? `${taskDetailsTransitionDuration}ms` : undefined,\r\n                      }}/>\r\n                    </Box>\r\n                  </Resizable> :\r\n                  <Box sx={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    right: 0,\r\n                    width: activeTask ? (detailsWidthCss) : 0,\r\n                    minHeight: '100vh',\r\n                    overflowX: 'hidden',\r\n                    zIndex: 2,\r\n                    transition: detailsTransition ? `${taskDetailsTransitionDuration}ms` : undefined,\r\n                  }}>\r\n                    <Box\r\n                      sx={{\r\n                        ...getDetailsTransitionStyles(state, theme),\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        right: !!activeTask ? 0 : `-${detailsWidthCss}`,\r\n                        width: detailsWidthCss,\r\n                        transition: detailsTransition ? `${taskDetailsTransitionDuration}ms` : undefined,\r\n                      }}\r\n                    >\r\n                      {content}\r\n                    </Box>\r\n                  </Box>\r\n              }\r\n            </Box>\r\n          )\r\n        }\r\n      </Transition>\r\n\r\n      <CommonModal\r\n        open={deleteTask}\r\n        onClose={() => setDeleteTask(false)}\r\n      >\r\n        <DeleteTask\r\n          onClose={() => setDeleteTask(false)}\r\n          task={activeTask}\r\n        />\r\n      </CommonModal>\r\n    </>\r\n  )\r\n}","import {IPartialTask, ITask} from \"../../../../typescript/entities\";\r\nimport {Box, Checkbox, Typography, useMediaQuery, useTheme} from \"@mui/material\";\r\nimport {MouseEventHandler, useMemo} from \"react\";\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport {getVerbalDate, IVerbalDate} from \"../../../../utils/helpers/dates\";\r\nimport classNames from \"classnames\";\r\nimport {taskDetailsTransitionDuration} from \"./TaskDetails\";\r\n\r\ninterface IProps {\r\n  task: ITask,\r\n  updateTask: (updatedPartialTask: IPartialTask) => void,\r\n  activeTask: ITask | null,\r\n  setActiveTask: (newTask: ITask | null) => void,\r\n}\r\n\r\nexport const TasksItem = ({task, updateTask, activeTask, setActiveTask}: IProps) => {\r\n  const theme = useTheme()\r\n\r\n  const upMd = useMediaQuery(theme.breakpoints.up('md'))\r\n\r\n  const verbalDate = useMemo<IVerbalDate | null>(() => {\r\n    if (!task.due_date) {\r\n      return null\r\n    }\r\n\r\n    const expDate = new Date(task.due_date)\r\n\r\n    return getVerbalDate(expDate)\r\n  }, [task.due_date])\r\n\r\n  const onBoxClick: MouseEventHandler<HTMLDivElement> = (e) => {\r\n    setActiveTask(task)\r\n  }\r\n\r\n  const onTaskCompletedClick: MouseEventHandler<HTMLButtonElement> = (e) => {\r\n    updateTask({\r\n      id: task.id,\r\n      completed: !task.completed,\r\n    })\r\n\r\n    e.stopPropagation()\r\n  }\r\n\r\n  const onTaskImportantClick: MouseEventHandler<HTMLDivElement> = (e) => {\r\n    updateTask({\r\n      id: task.id,\r\n      important: !task.important,\r\n    })\r\n\r\n    e.stopPropagation()\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      onClick={onBoxClick}\r\n      className={classNames({active: task.id === activeTask?.id})}\r\n      sx={theme => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        minHeight: '60px',\r\n        mb: 1,\r\n        mr: 2,\r\n        borderRadius: '10px',\r\n        py: 2,\r\n        px: upMd ? 4 : 3,\r\n        backgroundColor: theme.palette.custom.basicBg,\r\n        cursor: 'pointer',\r\n        transition: `${taskDetailsTransitionDuration}ms`,\r\n        '&.active': {\r\n          background: theme.palette.custom.tasksActiveItemBg,\r\n        }\r\n      })}\r\n    >\r\n      <Checkbox\r\n        checked={task.completed}\r\n        onClick={onTaskCompletedClick}\r\n        sx={theme => ({\r\n          p: upMd ? undefined : 0,\r\n          color: theme.palette.custom.grey['400'],\r\n        })}\r\n      />\r\n\r\n      <Box sx={{\r\n        ml: upMd ? 5 : 2,\r\n        mr: upMd ? 5 : 2,\r\n      }}>\r\n        <Typography variant=\"subtitle1\" sx={{\r\n          fontSize: '16px',\r\n          lineHeight: '24px',\r\n          fontWeight: 500,\r\n        }}>{task.title}</Typography>\r\n\r\n        {\r\n          (verbalDate || task.note) &&\r\n            <Typography variant=\"subtitle2\" sx={theme => ({\r\n              mt: 1,\r\n              fontSize: '14px',\r\n              lineHeight: '20px',\r\n              color: theme.palette.custom.grey['4'],\r\n            })}>\r\n                <Box component=\"span\" sx={theme => ({\r\n                  color: verbalDate?.accent === 'danger' ? theme.palette.custom.red :\r\n                    verbalDate?.accent === 'warning' ? theme.palette.warning.light : '',\r\n                })}>\r\n                  {\r\n                    !!verbalDate &&\r\n                    verbalDate.label\r\n                  }\r\n                </Box>\r\n\r\n              {\r\n                !!verbalDate &&\r\n                !!task.note &&\r\n                ' - '\r\n              }\r\n\r\n              {\r\n                !!task.note &&\r\n                'Note'\r\n              }\r\n            </Typography>\r\n        }\r\n      </Box>\r\n\r\n      <Box\r\n        onClick={onTaskImportantClick}\r\n        sx={{\r\n          ml: 'auto',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        {\r\n          task.important ?\r\n            <StarIcon sx={theme => ({\r\n              display: 'block',\r\n              fill: theme.palette.custom.red,\r\n            })}/> :\r\n            <StarBorderIcon sx={theme => ({\r\n              display: 'block',\r\n              fill: theme.palette.custom.grey['2'],\r\n            })}/>\r\n        }\r\n      </Box>\r\n    </Box>\r\n  )\r\n}","import {ReactNode} from \"react\";\r\nimport {Box} from \"@mui/material\";\r\n\r\ninterface IProps {\r\n  currentIndex: number,\r\n  items: {\r\n    children: ReactNode,\r\n  }[],\r\n}\r\n\r\nexport const CommonTabPanels = ({currentIndex, items}: IProps) => {\r\n  return (\r\n    <>\r\n      {\r\n        items.map((item, i) => (\r\n          <Box\r\n            sx={{\r\n              display: currentIndex !== i ? 'none' : undefined,\r\n            }}\r\n            key={i}\r\n          >\r\n            {item.children}\r\n          </Box>\r\n        ))\r\n      }\r\n    </>\r\n  )\r\n}","import {useAppDispatch, useAppSelector} from \"redux/hooks\";\r\nimport React, {useMemo, useState} from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport * as yup from 'yup'\r\nimport {Box, Button, Checkbox, FormControlLabel, Typography, useMediaQuery, useTheme} from \"@mui/material\";\r\nimport {generateInputError} from \"utils/helpers/forms\";\r\nimport {CommonTextField} from \"../../../../common/CommonTextField\";\r\nimport {selectTasks} from \"../../../../../redux/selectors/tasks\";\r\nimport {DatePicker} from \"@mui/x-date-pickers\";\r\nimport {Moment} from \"moment\";\r\nimport {ISelectOption} from \"../../../../../typescript/common\";\r\nimport {ITask, ITaskList} from \"../../../../../typescript/entities\";\r\nimport {CommonSelect} from \"../../../../common/CommonSelect\";\r\nimport {getNewEntityId} from \"../../../../../utils/helpers/common\";\r\nimport {getUTCDueDateString} from \"../../../../../utils/helpers/dates\";\r\nimport {createTask} from \"../../../../../redux/features/tasks/tasksThunks\";\r\nimport {ButtonLoader} from \"../../../../common/ButtonLoader\";\r\nimport {CREATE_TASK} from \"../../../../../redux/variables\";\r\n\r\ninterface IProps {\r\n  onClose: () => void,\r\n  defaultList?: ITaskList,\r\n}\r\n\r\ninterface IFormValues {\r\n  title: string,\r\n  important: boolean,\r\n  due_date: Moment | null,\r\n  note: string,\r\n  list: ISelectOption<number> | null,\r\n}\r\n\r\nexport const AddTask = ({onClose, defaultList}: IProps) => {\r\n  const dispatch = useAppDispatch()\r\n\r\n  const theme = useTheme()\r\n\r\n  const upMd = useMediaQuery(theme.breakpoints.up('md'))\r\n\r\n  const tasks = useAppSelector(selectTasks)\r\n\r\n  const taskListOptions = useMemo(() => [\r\n    ...(tasks.lists as ITaskList[]).map(list => ({\r\n      label: list.name,\r\n      value: list.id,\r\n    })),\r\n  ], [tasks.lists])\r\n\r\n  const [initValues] = useState<IFormValues>({\r\n    title: '',\r\n    important: false,\r\n    due_date: null,\r\n    note: '',\r\n    list: defaultList ?\r\n      taskListOptions.find(option => option.value === defaultList.id)! :\r\n      null,\r\n  })\r\n\r\n  const validationSchema = yup.object({\r\n    title: yup.string()\r\n      .trim()\r\n      .required(),\r\n    note: yup.string()\r\n      .trim(),\r\n  })\r\n\r\n  const processSubmit = async () => {\r\n    const newTask = {\r\n      id: getNewEntityId((tasks.data as ITask[]).map(task => task.id)),\r\n      title: values.title,\r\n      creation_date: (new Date()).toISOString(),\r\n      due_date: values.due_date && getUTCDueDateString(values.due_date),\r\n      note: values.note || null,\r\n      list_id: values.list?.value || null,\r\n      important: values.important,\r\n      completed: false,\r\n    }\r\n\r\n    await dispatch(createTask(newTask))\r\n\r\n    onClose()\r\n  }\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    handleSubmit,\r\n    handleChange,\r\n    setFieldValue,\r\n  } =\r\n    useFormik({\r\n      validationSchema: validationSchema,\r\n      onSubmit: processSubmit,\r\n      initialValues: initValues,\r\n      enableReinitialize: true,\r\n    });\r\n\r\n  return (\r\n    <Box\r\n      component=\"form\"\r\n      onSubmit={handleSubmit}\r\n      noValidate\r\n      sx={theme => ({\r\n        width: upMd ? '700px' : undefined,\r\n        maxWidth: '100%',\r\n        '& > *': {\r\n          width: '100%',\r\n        }\r\n      })}\r\n    >\r\n      <Typography variant=\"h3\" sx={{\r\n        fontSize: '24px',\r\n        lineHeight: '24px',\r\n        marginBottom: '24px',\r\n      }}>Add a task</Typography>\r\n\r\n      <CommonTextField\r\n        name=\"title\"\r\n        required\r\n        value={values.title}\r\n        onChange={handleChange}\r\n        autoFocus\r\n        error={!!errors.title && touched.title}\r\n        helperText={!!errors.title && touched.title && generateInputError('title')}\r\n        placeholder=\"Title\"\r\n        label=\"Title\"\r\n        sx={{\r\n          mb: 2,\r\n        }}\r\n      />\r\n\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            name=\"important\"\r\n            checked={values.important}\r\n            onChange={handleChange}\r\n          />\r\n        }\r\n        label=\"Important\"\r\n        sx={{\r\n          mb: 2,\r\n        }}\r\n      />\r\n\r\n      <DatePicker\r\n        value={values.due_date}\r\n        onChange={newValue => {\r\n          setFieldValue('due_date', newValue)\r\n        }}\r\n        disablePast\r\n        sx={{\r\n          mb: 2,\r\n        }}\r\n      />\r\n\r\n      <CommonSelect<number, false>\r\n        name=\"list\"\r\n        value={values.list}\r\n        placeholder=\"Select task list...\"\r\n        onChange={newValue => setFieldValue('list', newValue)}\r\n        options={taskListOptions}\r\n        styles={{\r\n          control: {\r\n            height: '56px',\r\n            marginBottom: theme.spacing(2),\r\n          },\r\n        }}\r\n      />\r\n\r\n      <CommonTextField\r\n        name=\"note\"\r\n        required\r\n        value={values.note}\r\n        onChange={handleChange}\r\n        multiline\r\n        minRows={3}\r\n        placeholder=\"Note\"\r\n        label=\"Note\"\r\n      />\r\n\r\n      <Box sx={{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        mt: 4,\r\n        '& > *:not(:last-child)': {\r\n          mr: 2,\r\n        },\r\n      }}>\r\n        <Button\r\n          onClick={onClose}\r\n          variant=\"text\"\r\n        >Cancel</Button>\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          disabled={tasks.loading.includes(CREATE_TASK)}\r\n        >\r\n          Add\r\n          {\r\n            tasks.loading.includes(CREATE_TASK) &&\r\n              <ButtonLoader/>\r\n          }\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}","import {useAppDispatch, useAppSelector} from \"redux/hooks\";\r\nimport React from \"react\";\r\nimport {Box, Button, Typography, useMediaQuery, useTheme} from \"@mui/material\";\r\nimport {ITaskList} from \"../../../../../typescript/entities\";\r\nimport {deleteTaskList} from \"../../../../../redux/features/tasks/tasksThunks\";\r\nimport {selectTasks} from \"../../../../../redux/selectors/tasks\";\r\nimport {ButtonLoader} from \"../../../../common/ButtonLoader\";\r\nimport {DELETE_TASK_LIST} from \"../../../../../redux/variables\";\r\n\r\ninterface IProps {\r\n  onClose: () => void,\r\n  taskList: ITaskList | null,\r\n}\r\n\r\nexport const DeleteTaskList = ({onClose, taskList}: IProps) => {\r\n  const dispatch = useAppDispatch()\r\n\r\n  const theme = useTheme()\r\n\r\n  const upMd = useMediaQuery(theme.breakpoints.up('md'))\r\n\r\n  const tasks = useAppSelector(selectTasks)\r\n\r\n  const onDelete = async () => {\r\n    await dispatch(deleteTaskList(taskList!.id))\r\n\r\n    onClose()\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={theme => ({\r\n        width: upMd ? '310px' : undefined,\r\n        maxWidth: '100%',\r\n        '& > *': {\r\n          width: '100%',\r\n        }\r\n      })}\r\n    >\r\n      <Typography variant=\"h3\" sx={{\r\n        fontSize: '24px',\r\n        lineHeight: '24px',\r\n        marginBottom: '24px',\r\n      }}>Are you sure?</Typography>\r\n\r\n      <Typography sx={theme => ({\r\n        fontSize: '14px',\r\n        lineHeight: '20px',\r\n        color: theme.palette.custom.grey['2'],\r\n      })}>Task list will be permanently deleted</Typography>\r\n\r\n      <Box sx={{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        mt: 4,\r\n        '& > *:not(:last-child)': {\r\n          mr: 2,\r\n        },\r\n      }}>\r\n        <Button\r\n          onClick={onClose}\r\n          variant=\"text\"\r\n        >Cancel</Button>\r\n\r\n        <Button\r\n          onClick={onDelete}\r\n          variant=\"contained\"\r\n          color=\"error\"\r\n          disabled={tasks.loading.includes(DELETE_TASK_LIST)}\r\n        >\r\n          Delete\r\n          {\r\n            tasks.loading.includes(DELETE_TASK_LIST) &&\r\n              <ButtonLoader/>\r\n          }\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}","import {useAppDispatch, useAppSelector} from \"redux/hooks\";\r\nimport React, {useState} from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport * as yup from 'yup'\r\nimport {Box, Button, Typography, useMediaQuery, useTheme} from \"@mui/material\";\r\nimport {generateInputError} from \"utils/helpers/forms\";\r\nimport {CommonTextField} from \"../../../../common/CommonTextField\";\r\nimport {selectTasks} from \"../../../../../redux/selectors/tasks\";\r\nimport {ITaskList} from \"../../../../../typescript/entities\";\r\nimport {updateTaskList} from \"../../../../../redux/features/tasks/tasksThunks\";\r\nimport {ButtonLoader} from \"../../../../common/ButtonLoader\";\r\nimport {UPDATE_TASK_LIST} from \"../../../../../redux/variables\";\r\n\r\ninterface IProps {\r\n  onClose: () => void,\r\n  taskList: ITaskList | null,\r\n}\r\n\r\ninterface IFormValues {\r\n  name: string,\r\n}\r\n\r\nexport const EditTaskList = ({onClose, taskList}: IProps) => {\r\n  const dispatch = useAppDispatch()\r\n\r\n  const theme = useTheme()\r\n\r\n  const upMd = useMediaQuery(theme.breakpoints.up('md'))\r\n\r\n  const tasks = useAppSelector(selectTasks)\r\n\r\n  const [initValues] = useState<IFormValues>({\r\n    name: taskList?.name || '',\r\n  })\r\n\r\n  const validationSchema = yup.object({\r\n    name: yup.string()\r\n      .trim()\r\n      .required(),\r\n  })\r\n\r\n  const processSubmit = async () => {\r\n    await dispatch(updateTaskList({\r\n      id: taskList!.id,\r\n      name: values.name,\r\n    }))\r\n\r\n    onClose()\r\n  }\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    handleSubmit,\r\n    handleChange,\r\n  } =\r\n    useFormik({\r\n      validationSchema: validationSchema,\r\n      onSubmit: processSubmit,\r\n      initialValues: initValues,\r\n      enableReinitialize: true,\r\n    });\r\n\r\n  return (\r\n    <Box\r\n      component=\"form\"\r\n      onSubmit={handleSubmit}\r\n      noValidate\r\n      sx={theme => ({\r\n        width: upMd ? '700px' : undefined,\r\n        maxWidth: '100%',\r\n        '& > *': {\r\n          width: '100%',\r\n        }\r\n      })}\r\n    >\r\n      <Typography variant=\"h3\" sx={{\r\n        fontSize: '24px',\r\n        lineHeight: '24px',\r\n        marginBottom: '24px',\r\n      }}>Rename list</Typography>\r\n\r\n      <CommonTextField\r\n        name=\"name\"\r\n        required\r\n        value={values.name}\r\n        onChange={handleChange}\r\n        autoFocus\r\n        error={!!errors.name && touched.name}\r\n        helperText={!!errors.name && touched.name && generateInputError('name')}\r\n        placeholder=\"New name\"\r\n        label=\"New name\"\r\n      />\r\n\r\n      <Box sx={{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        mt: 4,\r\n        '& > *:not(:last-child)': {\r\n          mr: 2,\r\n        },\r\n      }}>\r\n        <Button\r\n          onClick={onClose}\r\n          variant=\"text\"\r\n        >Cancel</Button>\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          disabled={tasks.loading.includes(UPDATE_TASK_LIST)}\r\n        >\r\n          Rename\r\n          {\r\n            tasks.loading.includes(UPDATE_TASK_LIST) &&\r\n              <ButtonLoader/>\r\n          }\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}","import {tasksHeaderFiltersHeight, tasksHeaderMarginBottom, tasksHeaderTitleHeight} from \"./TasksPage\";\r\nimport {Box, IconButton, Typography, useMediaQuery, useTheme} from \"@mui/material\";\r\nimport {TasksPageFilters, TasksSortOptionValue, TasksSplitOptionValue} from \"./TasksPageFilters\";\r\nimport {ISelectOption} from \"../../../../typescript/common\";\r\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport React, {useContext} from \"react\";\r\nimport {ISidebarContext, SidebarContext} from \"../../../../utils/contexts/SidebarContext\";\r\n\r\ninterface IProps {\r\n  title: string,\r\n  splitOption: ISelectOption<TasksSplitOptionValue>,\r\n  setSplitOption: (newValue: ISelectOption<TasksSplitOptionValue>) => void,\r\n  sortOption: ISelectOption<TasksSortOptionValue>,\r\n  setSortOption: (newValue: ISelectOption<TasksSortOptionValue>) => void,\r\n  controls?: {\r\n    edit: boolean,\r\n    setEdit: (value: boolean) => void,\r\n    delete: boolean,\r\n    setDelete: (value: boolean) => void,\r\n  },\r\n}\r\n\r\nexport const TasksPageHeader = ({title, splitOption, setSplitOption, sortOption, setSortOption, controls}: IProps) => {\r\n  const theme = useTheme()\r\n\r\n  const upMd = useMediaQuery(theme.breakpoints.up('md'))\r\n\r\n  const {open, setOpen} = useContext(SidebarContext) as ISidebarContext\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        height: upMd ? `${tasksHeaderTitleHeight}px` : undefined,\r\n        mb: tasksHeaderMarginBottom,\r\n      }}>\r\n        <Box sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n        }}>\r\n          {\r\n            !upMd &&\r\n              <IconButton onClick={() => setOpen(!open)} sx={theme => ({\r\n                p: 0,\r\n                mr: 3,\r\n                color: theme.palette.custom.contrastTextColor,\r\n              })}>\r\n                  <MenuIcon/>\r\n              </IconButton>\r\n          }\r\n\r\n          <Typography variant=\"h3\" sx={theme => ({\r\n            fontSize: '22px',\r\n            lineHeight: '28px',\r\n            color: theme.palette.custom.contrastTextColor,\r\n          })}>{title}</Typography>\r\n        </Box>\r\n\r\n        {\r\n          controls &&\r\n            <Box sx={theme => ({\r\n              display: 'flex',\r\n              '& svg': {\r\n                fontSize: '24px',\r\n                color: theme.palette.custom.contrastTextColor,\r\n              },\r\n            })}>\r\n                <IconButton onClick={() => controls.setEdit(true)}>\r\n                    <DriveFileRenameOutlineIcon/>\r\n                </IconButton>\r\n                <IconButton onClick={() => controls.setDelete(true)}>\r\n                    <DeleteOutlineIcon/>\r\n                </IconButton>\r\n            </Box>\r\n        }\r\n      </Box>\r\n\r\n      <Box sx={{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center',\r\n        height: `${tasksHeaderFiltersHeight}px`,\r\n        mb: tasksHeaderMarginBottom,\r\n      }}>\r\n        <TasksPageFilters\r\n          splitOption={splitOption}\r\n          setSplitOption={setSplitOption}\r\n          sortOption={sortOption}\r\n          setSortOption={setSortOption}\r\n        />\r\n      </Box>\r\n    </>\r\n  )\r\n}","import {Box, Button, SxProps, Tab, Tabs, Typography, useMediaQuery, useTheme} from \"@mui/material\";\r\nimport React, {useCallback, useEffect, useMemo, useState} from \"react\";\r\nimport {IPartialTask, ITask, ITaskList} from \"../../../../typescript/entities\";\r\nimport {TasksItem} from \"./TasksItem\";\r\nimport {CommonTabPanels} from \"../../../common/CommonTabPanels\";\r\nimport {TasksSortOptionValue, TasksSplitOptionValue} from \"./TasksPageFilters\";\r\nimport _ from \"lodash\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport {Theme} from \"@mui/material/styles\";\r\nimport {SystemStyleObject} from \"@mui/system/styleFunctionSx/styleFunctionSx\";\r\nimport {useAppDispatch} from \"../../../../redux/hooks\";\r\nimport {updateTask} from \"../../../../redux/features/tasks/tasksThunks\";\r\nimport {AddTask} from \"./modals/AddTask\";\r\nimport {TasksDetails} from \"./TaskDetails\";\r\nimport {CommonModal} from \"../../../common/CommonModal\";\r\nimport {DeleteTaskList} from \"./modals/DeleteTaskList\";\r\nimport {EditTaskList} from \"./modals/EditTaskList\";\r\nimport {TasksPageHeader} from \"./TasksPageHeader\";\r\nimport {ISelectOption} from \"../../../../typescript/common\";\r\n\r\ninterface IProps {\r\n  header: {\r\n    title: string,\r\n    splitOption: ISelectOption<TasksSplitOptionValue>,\r\n    setSplitOption: (newOption: ISelectOption<TasksSplitOptionValue>) => void,\r\n    sortOption: ISelectOption<TasksSortOptionValue>,\r\n    setSortOption: (newOption: ISelectOption<TasksSortOptionValue>) => void,\r\n    controls?: boolean,\r\n  },\r\n  visibleTasks: ITask[],\r\n  targetTaskList?: ITaskList,\r\n  splitValue: TasksSplitOptionValue,\r\n  sortValue: TasksSortOptionValue,\r\n  sx?: SxProps<Theme>,\r\n}\r\n\r\nexport const tasksHeaderTitleHeight = 40\r\nexport const tasksHeaderFiltersHeight = 38\r\nexport const tasksHeaderMarginBottom = 2\r\n\r\nexport const tasksAddButtonMarginTop = 4\r\nexport const tasksAddButtonHeight = 40\r\n\r\nexport const TasksPage = ({header, visibleTasks, targetTaskList, splitValue, sortValue, sx}: IProps) => {\r\n  const dispatch = useAppDispatch()\r\n\r\n  const theme = useTheme()\r\n\r\n  const upMd = useMediaQuery(theme.breakpoints.up('md'))\r\n\r\n  const tasksPagePaddingTop = useMemo(() => upMd ? 8 : 4, [upMd])\r\n  const tasksPagePaddingBottom = useMemo(() => upMd ? 4 : 3, [upMd])\r\n\r\n  const [tabIndex, setTabIndex] = useState<number>(0)\r\n\r\n  const [addTask, setAddTask] = useState<boolean>(false)\r\n  const [editTaskList, setEditTaskList] = useState<boolean>(false)\r\n  const [deleteTaskList, setDeleteTaskList] = useState<boolean>(false)\r\n\r\n  const [activeTask, setActiveTask] = useState<ITask | null>(null)\r\n\r\n  useEffect(() => {\r\n    setActiveTask(visibleTasks.find(task => task.id === activeTask?.id) || null)\r\n  }, [visibleTasks])\r\n\r\n  useEffect(() => {\r\n    setTabIndex(0)\r\n  }, [splitValue])\r\n\r\n  const processUpdateTask = useCallback((updatedPartialTask: IPartialTask) => {\r\n    dispatch(updateTask(updatedPartialTask))\r\n  }, [])\r\n\r\n  const contentHeightCss = useMemo(() => {\r\n    const occupiedHeight = parseInt(theme.spacing(tasksPagePaddingTop)) + tasksHeaderTitleHeight\r\n      + parseInt(theme.spacing(tasksHeaderMarginBottom)) + tasksHeaderFiltersHeight\r\n      + parseInt(theme.spacing(tasksHeaderMarginBottom)) + parseInt(theme.spacing(tasksAddButtonMarginTop))\r\n      + tasksAddButtonHeight + parseInt(theme.spacing(tasksPagePaddingBottom))\r\n\r\n    return `calc(100vh - ${occupiedHeight}px)`\r\n  }, [tasksPagePaddingBottom, tasksPagePaddingTop, theme])\r\n\r\n  const tasksContent = useMemo(() => {\r\n    if (!visibleTasks.length) {\r\n      return (\r\n        <Typography variant=\"subtitle1\" sx={theme => ({\r\n          color: theme.palette.custom.contrastTextColor,\r\n        })}>No tasks</Typography>\r\n      )\r\n    }\r\n\r\n    const getSortedTasks = (tasks: ITask[]) => {\r\n      switch (sortValue) {\r\n        case \"byTitle\":\r\n          return _.sortBy(tasks, task => [task.title, task.creation_date])\r\n        case \"byImportant\":\r\n          return _.sortBy(tasks, task => [!task.important, task.creation_date])\r\n        case \"byCompleted\":\r\n          return _.sortBy(tasks, task => [!task.completed, task.creation_date])\r\n        case \"\":\r\n          return _.sortBy(tasks, task => task.creation_date)\r\n      }\r\n    }\r\n\r\n    switch (splitValue) {\r\n      case \"\":\r\n        return (\r\n          getSortedTasks(visibleTasks)\r\n            .map(task => (\r\n              <TasksItem\r\n                task={task}\r\n                updateTask={processUpdateTask}\r\n                activeTask={activeTask}\r\n                setActiveTask={setActiveTask}\r\n                key={task.id}\r\n              />\r\n            ))\r\n        )\r\n      case \"byCompleted\":\r\n        return (\r\n          <>\r\n            <Tabs\r\n              value={tabIndex}\r\n              onChange={(e, value) => setTabIndex(value)}\r\n              sx={{\r\n                mb: 2,\r\n                '& .MuiTab-root': {\r\n                  minWidth: '180px',\r\n                  textTransform: 'capitalize',\r\n                },\r\n              }}\r\n            >\r\n              <Tab label=\"To Do\"/>\r\n              <Tab label=\"Completed\"/>\r\n            </Tabs>\r\n\r\n            <CommonTabPanels\r\n              currentIndex={tabIndex}\r\n              items={[\r\n                {\r\n                  children: getSortedTasks(visibleTasks.filter(task => !task.completed))\r\n                    .map(task => (\r\n                      <TasksItem\r\n                        task={task}\r\n                        updateTask={processUpdateTask}\r\n                        activeTask={activeTask}\r\n                        setActiveTask={setActiveTask}\r\n                        key={task.id}\r\n                      />\r\n                    )),\r\n                },\r\n                {\r\n                  children: getSortedTasks(visibleTasks.filter(task => task.completed))\r\n                    .map(task => (\r\n                      <TasksItem\r\n                        task={task}\r\n                        updateTask={processUpdateTask}\r\n                        activeTask={activeTask}\r\n                        setActiveTask={setActiveTask}\r\n                        key={task.id}\r\n                      />\r\n                    ))\r\n                },\r\n              ]}\r\n            />\r\n          </>\r\n        )\r\n      case \"byImportant\":\r\n        return (\r\n          <>\r\n            <Tabs\r\n              value={tabIndex}\r\n              onChange={(e, value) => setTabIndex(value)}\r\n              sx={{\r\n                mb: 2,\r\n                '& .MuiTab-root': {\r\n                  minWidth: '180px',\r\n                  textTransform: 'capitalize',\r\n                },\r\n              }}\r\n            >\r\n              <Tab label=\"Important\"/>\r\n              <Tab label=\"Not important\"/>\r\n            </Tabs>\r\n\r\n            <CommonTabPanels\r\n              currentIndex={tabIndex}\r\n              items={[\r\n                {\r\n                  children: getSortedTasks(visibleTasks.filter(task => task.important))\r\n                    .map(task => (\r\n                      <TasksItem\r\n                        task={task}\r\n                        updateTask={processUpdateTask}\r\n                        activeTask={activeTask}\r\n                        setActiveTask={setActiveTask}\r\n                        key={task.id}\r\n                      />\r\n                    )),\r\n                },\r\n                {\r\n                  children: getSortedTasks(visibleTasks.filter(task => !task.important))\r\n                    .map(task => (\r\n                      <TasksItem\r\n                        task={task}\r\n                        updateTask={processUpdateTask}\r\n                        activeTask={activeTask}\r\n                        setActiveTask={setActiveTask}\r\n                        key={task.id}\r\n                      />\r\n                    ))\r\n                },\r\n              ]}\r\n            />\r\n          </>\r\n        )\r\n    }\r\n  }, [visibleTasks, splitValue, sortValue, tabIndex, processUpdateTask, activeTask])\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n      }}>\r\n        <Box sx={theme => ({\r\n          flexGrow: 1,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'space-between',\r\n          px: upMd ? 4 : 3,\r\n          pt: tasksPagePaddingTop,\r\n          pb: tasksPagePaddingBottom,\r\n          background: theme.palette.custom.tasksBg,\r\n          ...(sx ? sx as SystemStyleObject<Theme> : {}),\r\n        })}>\r\n          <Box>\r\n            <TasksPageHeader\r\n              title={header.title}\r\n              splitOption={header.splitOption}\r\n              setSplitOption={header.setSplitOption}\r\n              sortOption={header.sortOption}\r\n              setSortOption={header.setSortOption}\r\n              controls={\r\n                header.controls ?\r\n                  {\r\n                    edit: editTaskList,\r\n                    setEdit: setEditTaskList,\r\n                    delete: deleteTaskList,\r\n                    setDelete: setDeleteTaskList,\r\n                  } : undefined\r\n              }\r\n            />\r\n\r\n            <Box sx={{\r\n              maxHeight: contentHeightCss,\r\n              overflow: 'auto',\r\n              mr: -2,\r\n            }}>\r\n              {tasksContent}\r\n            </Box>\r\n          </Box>\r\n\r\n          <Button\r\n            variant=\"text\"\r\n            className=\"button_add\"\r\n            onClick={() => setAddTask(true)}\r\n            sx={theme => ({\r\n              display: 'flex',\r\n              justifyContent: 'flex-start',\r\n              alignItems: 'center',\r\n              p: 2,\r\n              background: theme.palette.custom.tasksButtonBg,\r\n              '&:hover': {\r\n                background: '#8f82cc',\r\n              },\r\n              '&, & *': {\r\n                color: theme.palette.common.white,\r\n              },\r\n            })}\r\n          >\r\n            <AddIcon sx={{\r\n              mr: 2,\r\n            }}/>\r\n\r\n            Add a task\r\n          </Button>\r\n        </Box>\r\n\r\n        <TasksDetails activeTask={activeTask} setActiveTask={setActiveTask} updateTask={processUpdateTask}/>\r\n      </Box>\r\n\r\n      <CommonModal\r\n        open={addTask}\r\n        onClose={() => setAddTask(false)}\r\n      >\r\n        <AddTask onClose={() => setAddTask(false)} defaultList={targetTaskList}/>\r\n      </CommonModal>\r\n\r\n      {\r\n        targetTaskList &&\r\n          <>\r\n              <CommonModal\r\n                  open={editTaskList}\r\n                  onClose={() => setEditTaskList(false)}\r\n              >\r\n                  <EditTaskList\r\n                      onClose={() => setEditTaskList(false)}\r\n                      taskList={targetTaskList}\r\n                  />\r\n              </CommonModal>\r\n\r\n              <CommonModal\r\n                  open={deleteTaskList}\r\n                  onClose={() => setDeleteTaskList(false)}\r\n              >\r\n                  <DeleteTaskList\r\n                      onClose={() => setDeleteTaskList(false)}\r\n                      taskList={targetTaskList}\r\n                  />\r\n              </CommonModal>\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}","import {ISelectOption} from \"../../../../typescript/common\";\r\nimport {Box} from \"@mui/material\";\r\nimport {CommonSelect} from \"../../../common/CommonSelect\";\r\n\r\nexport type TasksSplitOptionValue = '' | 'byCompleted' | 'byImportant';\r\n\r\nexport const splitOptions: Readonly<ISelectOption<TasksSplitOptionValue>[]> = [\r\n  {label: 'No split', value: ''},\r\n  {label: 'Split by selected', value: 'byCompleted'},\r\n  {label: 'Split by importance', value: 'byImportant'},\r\n]\r\n\r\nexport type TasksSortOptionValue = '' | 'byTitle' | 'byCompleted' | 'byImportant';\r\n\r\nexport const sortOptions: Readonly<ISelectOption<TasksSortOptionValue>[]> = [\r\n  {label: 'No sorting', value: ''},\r\n  {label: 'Sort by title', value: 'byTitle'},\r\n  {label: 'Sort by completed', value: 'byCompleted'},\r\n  {label: 'Sort by important', value: 'byImportant'},\r\n]\r\n\r\ninterface IProps {\r\n  splitOption: ISelectOption<TasksSplitOptionValue>,\r\n  setSplitOption: (newValue: ISelectOption<TasksSplitOptionValue>) => void,\r\n  sortOption: ISelectOption<TasksSortOptionValue>,\r\n  setSortOption: (newValue: ISelectOption<TasksSortOptionValue>) => void,\r\n}\r\n\r\nexport const TasksPageFilters = ({splitOption, setSplitOption, sortOption, setSortOption}: IProps) => {\r\n  return (\r\n    <Box sx={{\r\n      display: 'flex',\r\n      '& > *:not(:last-child)': {\r\n        mr: 2,\r\n      },\r\n    }}>\r\n      <CommonSelect<TasksSplitOptionValue, false>\r\n        classNamePrefix=\"react-select\"\r\n        value={splitOption}\r\n        onChange={newValue => {\r\n          setSplitOption(newValue as ISelectOption<TasksSplitOptionValue>)\r\n        }}\r\n        options={splitOptions}\r\n      />\r\n\r\n      <CommonSelect<TasksSortOptionValue, false>\r\n        classNamePrefix=\"react-select\"\r\n        value={sortOption}\r\n        onChange={newValue => {\r\n          setSortOption(newValue as ISelectOption<TasksSplitOptionValue>)\r\n        }}\r\n        options={sortOptions}\r\n      />\r\n    </Box>\r\n  )\r\n}"],"names":["stylesComponents","CommonSelect","props","theme","useTheme","defaultStyles","useMemo","control","background","palette","custom","formItemBg","color","text","primary","singleValue","multiValue","menu","zIndex","marginTop","option","formItemHoverBg","formItemSelectedBg","_jsx","Select","_objectSpread","classNamePrefix","styles","Object","fromEntries","map","item","baseStyles","DeleteTask","_ref","onClose","task","dispatch","useAppDispatch","upMd","useMediaQuery","breakpoints","up","tasks","useAppSelector","selectTasks","onDelete","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","deleteTask","id","stop","apply","arguments","_jsxs","Box","sx","width","undefined","maxWidth","children","Typography","variant","fontSize","lineHeight","marginBottom","grey","display","justifyContent","mt","mr","Button","onClick","disabled","loading","includes","DELETE_TASK","ButtonLoader","taskDetailsTransitionDuration","TasksDetails","activeTask","setActiveTask","updateTask","detailsRef","useRef","upSm","_useState","useState","_useState2","_slicedToArray","detailsWidth","setDetailsWidth","detailsWidthCss","concat","_useState3","_useState4","detailsTransition","setDetailsTransition","_useState5","_useState6","localTitleValue","setLocalTitleValue","_useState7","_useState8","localNoteValue","setLocalNoteValue","_useState9","_useState10","showDueDateOptions","setShowDueDateOptions","_useState11","_useState12","showDueDateDatepicker","setShowDueDateDatepicker","_useState13","_useState14","datepickerValue","setDatepickerValue","_useState15","_useState16","setDeleteTask","useEffect","title","note","datepickerStringValue","getUTCDueDateString","due_date","moment","toISOString","onTitleBlur","useCallback","onNoteBlur","onCompletedClick","e","completed","stopPropagation","onImportantClick","important","onDueDateCloseClick","onDueDateOptionClick","value","dateString","getDateStringFromVerbal","onResize","event","node","size","handle","getDetailsTransitionStyles","state","right","content","flexDirection","minHeight","pt","px","pb","basicBg","_Fragment","alignItems","height","Checkbox","checked","p","TextField","onChange","currentTarget","onBlur","placeholder","multiline","mx","border","outline","padding","opacity","ml","cursor","StarIcon","fill","red","Divider","my","TodayIcon","main","fontWeight","getFormattedDate","Date","CloseIcon","mb","ExpandLessIcon","ExpandMoreIcon","StaticDatePicker","disablePast","InputLabel","maxHeight","overflow","IconButton","ArrowForwardIosIcon","creation_date","DeleteOutlineIcon","Transition","nodeRef","in","timeout","onEntered","onExit","ref","Resizable","axis","resizeHandles","minConstraints","maxConstraints","position","top","left","overflowX","transition","CommonModal","open","TasksItem","verbalDate","expDate","getVerbalDate","className","classNames","active","borderRadius","py","backgroundColor","tasksActiveItemBg","component","accent","warning","light","label","StarBorderIcon","CommonTabPanels","currentIndex","items","i","AddTask","defaultList","taskListOptions","_toConsumableArray","lists","list","name","find","initValues","validationSchema","yup","trim","required","processSubmit","_values$list","newTask","getNewEntityId","data","values","list_id","createTask","_useFormik","useFormik","onSubmit","initialValues","enableReinitialize","errors","touched","handleSubmit","handleChange","setFieldValue","noValidate","CommonTextField","autoFocus","error","helperText","generateInputError","FormControlLabel","DatePicker","newValue","options","spacing","minRows","type","CREATE_TASK","DeleteTaskList","taskList","deleteTaskList","DELETE_TASK_LIST","EditTaskList","updateTaskList","UPDATE_TASK_LIST","TasksPageHeader","splitOption","setSplitOption","sortOption","setSortOption","controls","useContext","SidebarContext","setOpen","tasksHeaderTitleHeight","tasksHeaderMarginBottom","contrastTextColor","MenuIcon","setEdit","DriveFileRenameOutlineIcon","setDelete","tasksHeaderFiltersHeight","TasksPageFilters","TasksPage","header","visibleTasks","targetTaskList","splitValue","sortValue","tasksPagePaddingTop","tasksPagePaddingBottom","tabIndex","setTabIndex","addTask","setAddTask","editTaskList","setEditTaskList","setDeleteTaskList","processUpdateTask","updatedPartialTask","contentHeightCss","occupiedHeight","parseInt","tasksContent","length","getSortedTasks","_","Tabs","minWidth","textTransform","Tab","filter","flexGrow","tasksBg","edit","delete","tasksButtonBg","common","white","AddIcon","splitOptions","sortOptions"],"sourceRoot":""}